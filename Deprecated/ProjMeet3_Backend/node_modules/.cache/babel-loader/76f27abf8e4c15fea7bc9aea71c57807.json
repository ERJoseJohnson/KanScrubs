{"ast":null,"code":"'use strict';\n\nconst xml = require('@xmpp/xml');\n/*\r\n * References\r\n * https://xmpp.org/rfcs/rfc6120.html#bind\r\n */\n\n\nconst NS = 'urn:ietf:params:xml:ns:xmpp-bind';\n\nfunction makeBindElement(resource) {\n  return xml('bind', {\n    xmlns: NS\n  }, resource && xml('resource', {}, resource));\n}\n\nasync function bind(entity, iqCaller, resource) {\n  const result = await iqCaller.set(makeBindElement(resource));\n  const jid = result.getChildText('jid');\n\n  entity._jid(jid);\n\n  return jid;\n}\n\nfunction route({\n  iqCaller\n}, resource) {\n  return async function ({\n    entity\n  }, next) {\n    if (typeof resource === 'function') {\n      await resource(resource => bind(entity, iqCaller, resource));\n    } else {\n      await bind(entity, iqCaller, resource);\n    }\n\n    next();\n  };\n}\n\nmodule.exports = function ({\n  streamFeatures,\n  iqCaller\n}, resource) {\n  streamFeatures.use('bind', NS, route({\n    iqCaller\n  }, resource));\n};","map":{"version":3,"sources":["C:/Users/Jose Johnson/Desktop/KanScrubs/random/node_modules/@xmpp/resource-binding/index.js"],"names":["xml","require","NS","makeBindElement","resource","xmlns","bind","entity","iqCaller","result","set","jid","getChildText","_jid","route","next","module","exports","streamFeatures","use"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;AAEA;;;;;;AAKA,MAAMC,EAAE,GAAG,kCAAX;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACjC,SAAOJ,GAAG,CAAC,MAAD,EAAS;AAACK,IAAAA,KAAK,EAAEH;AAAR,GAAT,EAAsBE,QAAQ,IAAIJ,GAAG,CAAC,UAAD,EAAa,EAAb,EAAiBI,QAAjB,CAArC,CAAV;AACD;;AAED,eAAeE,IAAf,CAAoBC,MAApB,EAA4BC,QAA5B,EAAsCJ,QAAtC,EAAgD;AAC9C,QAAMK,MAAM,GAAG,MAAMD,QAAQ,CAACE,GAAT,CAAaP,eAAe,CAACC,QAAD,CAA5B,CAArB;AACA,QAAMO,GAAG,GAAGF,MAAM,CAACG,YAAP,CAAoB,KAApB,CAAZ;;AACAL,EAAAA,MAAM,CAACM,IAAP,CAAYF,GAAZ;;AACA,SAAOA,GAAP;AACD;;AAED,SAASG,KAAT,CAAe;AAACN,EAAAA;AAAD,CAAf,EAA2BJ,QAA3B,EAAqC;AACnC,SAAO,gBAAe;AAACG,IAAAA;AAAD,GAAf,EAAyBQ,IAAzB,EAA+B;AACpC,QAAI,OAAOX,QAAP,KAAoB,UAAxB,EAAoC;AAClC,YAAMA,QAAQ,CAACA,QAAQ,IAAIE,IAAI,CAACC,MAAD,EAASC,QAAT,EAAmBJ,QAAnB,CAAjB,CAAd;AACD,KAFD,MAEO;AACL,YAAME,IAAI,CAACC,MAAD,EAASC,QAAT,EAAmBJ,QAAnB,CAAV;AACD;;AAEDW,IAAAA,IAAI;AACL,GARD;AASD;;AAEDC,MAAM,CAACC,OAAP,GAAiB,UAAS;AAACC,EAAAA,cAAD;AAAiBV,EAAAA;AAAjB,CAAT,EAAqCJ,QAArC,EAA+C;AAC9Dc,EAAAA,cAAc,CAACC,GAAf,CAAmB,MAAnB,EAA2BjB,EAA3B,EAA+BY,KAAK,CAAC;AAACN,IAAAA;AAAD,GAAD,EAAaJ,QAAb,CAApC;AACD,CAFD","sourcesContent":["'use strict'\r\n\r\nconst xml = require('@xmpp/xml')\r\n\r\n/*\r\n * References\r\n * https://xmpp.org/rfcs/rfc6120.html#bind\r\n */\r\n\r\nconst NS = 'urn:ietf:params:xml:ns:xmpp-bind'\r\n\r\nfunction makeBindElement(resource) {\r\n  return xml('bind', {xmlns: NS}, resource && xml('resource', {}, resource))\r\n}\r\n\r\nasync function bind(entity, iqCaller, resource) {\r\n  const result = await iqCaller.set(makeBindElement(resource))\r\n  const jid = result.getChildText('jid')\r\n  entity._jid(jid)\r\n  return jid\r\n}\r\n\r\nfunction route({iqCaller}, resource) {\r\n  return async function({entity}, next) {\r\n    if (typeof resource === 'function') {\r\n      await resource(resource => bind(entity, iqCaller, resource))\r\n    } else {\r\n      await bind(entity, iqCaller, resource)\r\n    }\r\n\r\n    next()\r\n  }\r\n}\r\n\r\nmodule.exports = function({streamFeatures, iqCaller}, resource) {\r\n  streamFeatures.use('bind', NS, route({iqCaller}, resource))\r\n}\r\n"]},"metadata":{},"sourceType":"script"}