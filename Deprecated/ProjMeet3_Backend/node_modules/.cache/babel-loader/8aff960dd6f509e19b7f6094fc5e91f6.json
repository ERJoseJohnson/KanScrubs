{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Johnson\\\\Desktop\\\\KanScrubs\\\\random\\\\src\\\\chat_ui\\\\Chatbox.js\";\nimport React from \"react\";\nimport ChatHistory from \"./ChatHistory\";\nimport FormInp from \"./FormInp\";\nimport send from \"./rainbow/Send\";\nimport axios from \"axios\";\nvar outgoingMessage;\nvar incomingMessage;\nvar prevIncomingMessage = '';\n\nclass Chatbox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      companyName: \"\",\n      stored_value: \"Your Message will appear hear\",\n      history: this.props.history\n    };\n\n    this.updateHistory = event => {\n      event.preventDefault();\n      var new_history = this.state.history; // Just created a file bound variable to use with the getData() method\n\n      outgoingMessage = event.target[0].value;\n      new_history.push({\n        user: \"customer1\",\n        message: outgoingMessage\n      });\n      super.setState({\n        history: new_history\n      }); // Sedning new message as POST request to server\n      // postData(outgoingMessage);\n      //send(event.target[0].value) ; \n      // try {\n      //     const response = axios.post('http://localhost:8080/customerMessage', { incomingMessage: 'Hi there' });\n      //     console.log('ðŸ‘‰ Returned data:', response);\n      // } catch (e) {\n      //     console.log(`ðŸ˜± Axios request failed: ${e}`);\n      // }\n\n      axios.post('http://localhost:8080/customerMessage', {\n        incomingMessage: outgoingMessage\n      }).then(response => {\n        console.log(response);\n      }, error => {\n        console.log(error);\n      }); // send a post request \n      // axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\n      //     .then((response) => {\n      //         console.log(response);\n      //     })\n    };\n\n    this.receiveMessage = () => {\n      console.log(\"klsdfjaslkdfjslad\");\n      axios.get('http://localhost:8080/adminResponse', {\n        success: \"Received admin message\"\n      }).then(response => {\n        //if (incomingMessage != response.adminResponse) {\n        console.log(response);\n        var new_history = this.state.history; // Just created a file bound variable to use with the getData() method\n\n        incomingMessage = response.adminResponse;\n      });\n\n      if (prevIncomingMessage != incomingMessage) {\n        prevIncomingMessage = response.adminResponse;\n        new_history.push({\n          user: \"admin\",\n          message: incomingMessage\n        });\n        super.setState({\n          history: new_history\n        });\n      }\n    };\n  }\n\n  render() {\n    this.receiveMessage();\n    console.log(\"rendering......\");\n    return React.createElement(\"div\", {\n      className: \"ba bw2 pa2 bg-light-yellow br4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.receiveMessage(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Receive\"), React.createElement(ChatHistory, {\n      history: this.state.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(FormInp, {\n      onSubmit: this.updateHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chatbox;","map":{"version":3,"sources":["C:/Users/Jose Johnson/Desktop/KanScrubs/random/src/chat_ui/Chatbox.js"],"names":["React","ChatHistory","FormInp","send","axios","outgoingMessage","incomingMessage","prevIncomingMessage","Chatbox","Component","state","companyName","stored_value","history","props","updateHistory","event","preventDefault","new_history","target","value","push","user","message","setState","post","then","response","console","log","error","receiveMessage","get","success","adminResponse","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ChatHistory from \"./ChatHistory\";\r\nimport FormInp from \"./FormInp\";\r\nimport send from \"./rainbow/Send\";\r\nimport axios from \"axios\";\r\n\r\nvar outgoingMessage;\r\nvar incomingMessage;\r\nvar prevIncomingMessage = '';\r\n\r\n\r\nclass Chatbox extends React.Component {\r\n\r\n    state = {\r\n        companyName: \"\",\r\n        stored_value: \"Your Message will appear hear\",\r\n        history: this.props.history,\r\n    }\r\n\r\n    updateHistory = (event) => {\r\n        event.preventDefault();\r\n        var new_history = this.state.history;\r\n        // Just created a file bound variable to use with the getData() method\r\n        outgoingMessage = event.target[0].value;\r\n        new_history.push({ user: \"customer1\", message: outgoingMessage });\r\n        super.setState({ history: new_history });\r\n        // Sedning new message as POST request to server\r\n        // postData(outgoingMessage);\r\n        //send(event.target[0].value) ; \r\n        // try {\r\n        //     const response = axios.post('http://localhost:8080/customerMessage', { incomingMessage: 'Hi there' });\r\n        //     console.log('ðŸ‘‰ Returned data:', response);\r\n        // } catch (e) {\r\n        //     console.log(`ðŸ˜± Axios request failed: ${e}`);\r\n        // }\r\n\r\n        axios.post('http://localhost:8080/customerMessage', {\r\n            incomingMessage: outgoingMessage\r\n        })\r\n            .then((response) => {\r\n                console.log(response);\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n        // send a post request \r\n\r\n        // axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\r\n        //     .then((response) => {\r\n        //         console.log(response);\r\n        //     })\r\n    };\r\n\r\n    receiveMessage = () => {\r\n        console.log(\"klsdfjaslkdfjslad\");\r\n        axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\r\n            .then((response) => {\r\n                //if (incomingMessage != response.adminResponse) {\r\n                console.log(response);\r\n                var new_history = this.state.history;\r\n                // Just created a file bound variable to use with the getData() method\r\n                incomingMessage = response.adminResponse;\r\n            })\r\n        if (prevIncomingMessage != incomingMessage) {\r\n            prevIncomingMessage = response.adminResponse;\r\n            new_history.push({ user: \"admin\", message: incomingMessage });\r\n            super.setState({ history: new_history });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.receiveMessage();\r\n        console.log(\"rendering......\")\r\n        return (\r\n\r\n            <div className=\"ba bw2 pa2 bg-light-yellow br4\" >\r\n                <button onClick={this.receiveMessage()}>Receive</button>\r\n                <ChatHistory history={this.state.history} />\r\n                <FormInp onSubmit={this.updateHistory} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Chatbox; "]},"metadata":{},"sourceType":"module"}