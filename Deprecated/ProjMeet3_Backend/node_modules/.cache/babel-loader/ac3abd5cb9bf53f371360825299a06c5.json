{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\r\n* @typedef Err\r\n* @readonly\r\n* @enum {number}\r\n*/\n\nconst code = {\n  \"OK\": 1,\n  \"ERROR\": -1,\n  \"ERRORUNAUTHORIZED\": -2,\n  \"ERRORXMPP\": -4,\n  \"ERRORXMPPJID\": -8,\n  \"ERRORBADREQUEST\": -16,\n  \"ERRORUNSUPPORTED\": -32,\n  \"ERRORNOTFOUND\": -64,\n  \"ERRORFORBIDDEN\": -128,\n  \"OTHERERROR\": -256\n};\nexports.code = code;\n/*\r\n* @typedef Err\r\n* @property {ErrorCode} code\r\n* @property {string} label ErrorManager label\r\n* @property {string} msg ErrorManager message\r\n*/\n\n/**\r\n * @module\r\n * @name ErrorManager\r\n */\n\nclass ErrorManager {\n  constructor() {}\n\n  static getErrorManager() {\n    ErrorManager.xmppUtils = ErrorManager.xmppUtils ? ErrorManager.xmppUtils : new ErrorManager();\n    return ErrorManager.xmppUtils;\n  }\n  /**\r\n   * @readonly\r\n   * @memberof ErrorManager\r\n   * @return {Err}\r\n   */\n\n\n  get BAD_REQUEST() {\n    return {\n      code: code.ERRORBADREQUEST,\n      label: \"BADREQUEST\",\n      msg: \"One or several parameters are not valid for that request.\"\n    };\n  }\n  /**\r\n   * @readonly\r\n   * @memberof ErrorManager\r\n   * @return {Err}\r\n   */\n\n\n  get FORBIDDEN() {\n    return {\n      code: code.ERRORFORBIDDEN,\n      label: \"FORBIDDEN\",\n      msg: \"This operation is not allowed.\"\n    };\n  }\n  /**\r\n   * @readonly\r\n   * @memberof ErrorManager\r\n   * @return {Err}\r\n   */\n\n\n  get OK() {\n    return {\n      code: code.OK,\n      label: \"SUCCESSFULL\",\n      msg: \"\"\n    };\n  }\n  /**\r\n   * @readonly\r\n   * @memberof ErrorManager\r\n   * @return {Err}\r\n   */\n\n\n  get XMPP() {\n    return {\n      code: code.ERRORXMPP,\n      label: \"XMPPERROR\",\n      msg: \"An error occured. See details for more information\"\n    };\n  }\n  /**\r\n   * @readonly\r\n   * @memberof ErrorManager\r\n   * @return {Err}\r\n   */\n\n\n  get ERROR() {\n    return {\n      code: code.ERROR,\n      label: \"INTERNALERROR\",\n      msg: \"An error occured. See details for more information\"\n    };\n  }\n  /**\r\n   * @readonly\r\n   * @memberof ErrorManager\r\n   * @return {Err}\r\n   */\n\n\n  get UNAUTHORIZED() {\n    return {\n      code: code.ERRORUNAUTHORIZED,\n      label: \"UNAUTHORIZED\",\n      msg: \"The email or the password is not correct\"\n    };\n  }\n\n  OTHERERROR(_label, _msg) {\n    return {\n      code: code.ERROR,\n      label: _label,\n      msg: _msg\n    };\n  }\n\n  CUSTOMERROR(codeERROR, label, msg) {\n    return {\n      code: codeERROR,\n      label: label,\n      msg: msg\n    };\n  }\n\n}\n\nexports.ErrorManager = ErrorManager;\nmodule.exports.ErrorManager = ErrorManager;","map":{"version":3,"sources":["../../src/lib/common/ErrorManager.ts"],"names":[],"mappings":"AAAA;;;;;AAEA;;;;;;AAKA,MAAM,IAAI,GAAG;AACZ,QAAM,CADM;AAEZ,WAAS,CAAC,CAFE;AAGZ,uBAAqB,CAAC,CAHV;AAIZ,eAAa,CAAC,CAJF;AAKZ,kBAAgB,CAAC,CALL;AAMZ,qBAAmB,CAAC,EANR;AAOZ,sBAAoB,CAAC,EAPT;AAQZ,mBAAiB,CAAC,EARN;AAST,oBAAkB,CAAC,GATV;AAUT,gBAAc,CAAC;AAVN,CAAb;AAoIsB,OAAA,CAAA,IAAA,GAAA,IAAA;AAvHtB;;;;;;;AAOA;;;;;AAIA,MAAM,YAAN,CAAkB;AAGd,EAAA,WAAA,GAAA,CACC;;AAED,SAAO,eAAP,GAAsB;AAClB,IAAA,YAAY,CAAC,SAAb,GAAyB,YAAY,CAAC,SAAb,GAAyB,YAAY,CAAC,SAAtC,GAAkD,IAAI,YAAJ,EAA3E;AAEA,WAAO,YAAY,CAAC,SAApB;AACH;AAED;;;;;;;AAKA,MAAI,WAAJ,GAAe;AACX,WAAO;AACH,MAAA,IAAI,EAAE,IAAI,CAAC,eADR;AAEH,MAAA,KAAK,EAAE,YAFJ;AAGH,MAAA,GAAG,EAAE;AAHF,KAAP;AAKH;AAED;;;;;;;AAKA,MAAI,SAAJ,GAAa;AACT,WAAO;AACH,MAAA,IAAI,EAAE,IAAI,CAAC,cADR;AAEH,MAAA,KAAK,EAAE,WAFJ;AAGH,MAAA,GAAG,EAAE;AAHF,KAAP;AAKH;AAED;;;;;;;AAKA,MAAI,EAAJ,GAAM;AACF,WAAO;AACH,MAAA,IAAI,EAAE,IAAI,CAAC,EADR;AAEH,MAAA,KAAK,EAAE,aAFJ;AAGH,MAAA,GAAG,EAAE;AAHF,KAAP;AAKH;AAED;;;;;;;AAKA,MAAI,IAAJ,GAAQ;AACJ,WAAO;AACH,MAAA,IAAI,EAAE,IAAI,CAAC,SADR;AAEH,MAAA,KAAK,EAAE,WAFJ;AAGH,MAAA,GAAG,EAAE;AAHF,KAAP;AAKH;AAED;;;;;;;AAKA,MAAI,KAAJ,GAAS;AACL,WAAO;AACH,MAAA,IAAI,EAAE,IAAI,CAAC,KADR;AAEH,MAAA,KAAK,EAAE,eAFJ;AAGH,MAAA,GAAG,EAAE;AAHF,KAAP;AAKH;AAED;;;;;;;AAKA,MAAI,YAAJ,GAAgB;AACZ,WAAO;AACH,MAAA,IAAI,EAAE,IAAI,CAAC,iBADR;AAEH,MAAA,KAAK,EAAE,cAFJ;AAGH,MAAA,GAAG,EAAE;AAHF,KAAP;AAKH;;AAED,EAAA,UAAU,CAAC,MAAD,EAAS,IAAT,EAAa;AACnB,WAAO;AACH,MAAA,IAAI,EAAE,IAAI,CAAC,KADR;AAEH,MAAA,KAAK,EAAE,MAFJ;AAGH,MAAA,GAAG,EAAE;AAHF,KAAP;AAKH;;AAED,EAAA,WAAW,CAAC,SAAD,EAAY,KAAZ,EAAmB,GAAnB,EAAsB;AAC7B,WAAO;AACH,MAAA,IAAI,EAAE,SADH;AAEH,MAAA,KAAK,EAAE,KAFJ;AAGH,MAAA,GAAG,EAAE;AAHF,KAAP;AAKH;;AAxGa;;AA4GV,OAAA,CAAA,YAAA,GAAA,YAAA;AACR,MAAM,CAAC,OAAP,CAAe,YAAf,GAA8B,YAA9B","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*\r\n* @typedef Err\r\n* @readonly\r\n* @enum {number}\r\n*/\r\nconst code = {\r\n    \"OK\": 1,\r\n    \"ERROR\": -1,\r\n    \"ERRORUNAUTHORIZED\": -2,\r\n    \"ERRORXMPP\": -4,\r\n    \"ERRORXMPPJID\": -8,\r\n    \"ERRORBADREQUEST\": -16,\r\n    \"ERRORUNSUPPORTED\": -32,\r\n    \"ERRORNOTFOUND\": -64,\r\n    \"ERRORFORBIDDEN\": -128,\r\n    \"OTHERERROR\": -256\r\n};\r\nexports.code = code;\r\n/*\r\n* @typedef Err\r\n* @property {ErrorCode} code\r\n* @property {string} label ErrorManager label\r\n* @property {string} msg ErrorManager message\r\n*/\r\n/**\r\n * @module\r\n * @name ErrorManager\r\n */\r\nclass ErrorManager {\r\n    constructor() {\r\n    }\r\n    static getErrorManager() {\r\n        ErrorManager.xmppUtils = ErrorManager.xmppUtils ? ErrorManager.xmppUtils : new ErrorManager();\r\n        return ErrorManager.xmppUtils;\r\n    }\r\n    /**\r\n     * @readonly\r\n     * @memberof ErrorManager\r\n     * @return {Err}\r\n     */\r\n    get BAD_REQUEST() {\r\n        return {\r\n            code: code.ERRORBADREQUEST,\r\n            label: \"BADREQUEST\",\r\n            msg: \"One or several parameters are not valid for that request.\"\r\n        };\r\n    }\r\n    /**\r\n     * @readonly\r\n     * @memberof ErrorManager\r\n     * @return {Err}\r\n     */\r\n    get FORBIDDEN() {\r\n        return {\r\n            code: code.ERRORFORBIDDEN,\r\n            label: \"FORBIDDEN\",\r\n            msg: \"This operation is not allowed.\"\r\n        };\r\n    }\r\n    /**\r\n     * @readonly\r\n     * @memberof ErrorManager\r\n     * @return {Err}\r\n     */\r\n    get OK() {\r\n        return {\r\n            code: code.OK,\r\n            label: \"SUCCESSFULL\",\r\n            msg: \"\"\r\n        };\r\n    }\r\n    /**\r\n     * @readonly\r\n     * @memberof ErrorManager\r\n     * @return {Err}\r\n     */\r\n    get XMPP() {\r\n        return {\r\n            code: code.ERRORXMPP,\r\n            label: \"XMPPERROR\",\r\n            msg: \"An error occured. See details for more information\"\r\n        };\r\n    }\r\n    /**\r\n     * @readonly\r\n     * @memberof ErrorManager\r\n     * @return {Err}\r\n     */\r\n    get ERROR() {\r\n        return {\r\n            code: code.ERROR,\r\n            label: \"INTERNALERROR\",\r\n            msg: \"An error occured. See details for more information\"\r\n        };\r\n    }\r\n    /**\r\n     * @readonly\r\n     * @memberof ErrorManager\r\n     * @return {Err}\r\n     */\r\n    get UNAUTHORIZED() {\r\n        return {\r\n            code: code.ERRORUNAUTHORIZED,\r\n            label: \"UNAUTHORIZED\",\r\n            msg: \"The email or the password is not correct\"\r\n        };\r\n    }\r\n    OTHERERROR(_label, _msg) {\r\n        return {\r\n            code: code.ERROR,\r\n            label: _label,\r\n            msg: _msg\r\n        };\r\n    }\r\n    CUSTOMERROR(codeERROR, label, msg) {\r\n        return {\r\n            code: codeERROR,\r\n            label: label,\r\n            msg: msg\r\n        };\r\n    }\r\n}\r\nexports.ErrorManager = ErrorManager;\r\nmodule.exports.ErrorManager = ErrorManager;\r\n//# sourceMappingURL=ErrorManager.js.map"]},"metadata":{},"sourceType":"script"}