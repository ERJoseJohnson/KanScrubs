{"ast":null,"code":"'use strict';\n\nconst {\n  Socket\n} = require('net');\n\nconst Connection = require('@xmpp/connection');\n\nconst {\n  Parser\n} = require('@xmpp/xml');\n\nconst {\n  parseURI\n} = require('@xmpp/connection/lib/util');\n\nconst NS_STREAM = 'http://etherx.jabber.org/streams';\n/* References\r\n * Extensible Messaging and Presence Protocol (XMPP): Core http://xmpp.org/rfcs/rfc6120.html\r\n */\n\nclass ConnectionTCP extends Connection {\n  socketParameters(service) {\n    const {\n      port,\n      hostname,\n      protocol\n    } = parseURI(service);\n    return protocol === 'xmpp:' ? {\n      port: port ? Number(port) : null,\n      host: hostname\n    } : undefined;\n  } // https://xmpp.org/rfcs/rfc6120.html#streams-open\n\n\n  headerElement() {\n    const el = super.headerElement();\n    el.name = 'stream:stream';\n    el.attrs['xmlns:stream'] = NS_STREAM;\n    return el;\n  } // https://xmpp.org/rfcs/rfc6120.html#streams-open\n\n\n  header(el) {\n    return `<?xml version='1.0'?>${el.toString().slice(0, -2)}>`;\n  } // https://xmpp.org/rfcs/rfc6120.html#streams-close\n\n\n  footer() {\n    return '</stream:stream>';\n  }\n\n}\n\nConnectionTCP.prototype.NS = NS_STREAM;\nConnectionTCP.prototype.Socket = Socket;\nConnectionTCP.prototype.Parser = Parser;\nmodule.exports = ConnectionTCP;","map":{"version":3,"sources":["C:/Users/Jose Johnson/Desktop/KanScrubs/random/node_modules/@xmpp/connection-tcp/index.js"],"names":["Socket","require","Connection","Parser","parseURI","NS_STREAM","ConnectionTCP","socketParameters","service","port","hostname","protocol","Number","host","undefined","headerElement","el","name","attrs","header","toString","slice","footer","prototype","NS","module","exports"],"mappings":"AAAA;;AAEA,MAAM;AAACA,EAAAA;AAAD,IAAWC,OAAO,CAAC,KAAD,CAAxB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,kBAAD,CAA1B;;AACA,MAAM;AAACE,EAAAA;AAAD,IAAWF,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAM;AAACG,EAAAA;AAAD,IAAaH,OAAO,CAAC,2BAAD,CAA1B;;AAEA,MAAMI,SAAS,GAAG,kCAAlB;AAEA;;;;AAGA,MAAMC,aAAN,SAA4BJ,UAA5B,CAAuC;AACrCK,EAAAA,gBAAgB,CAACC,OAAD,EAAU;AACxB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,QAAP;AAAiBC,MAAAA;AAAjB,QAA6BP,QAAQ,CAACI,OAAD,CAA3C;AAEA,WAAOG,QAAQ,KAAK,OAAb,GACH;AAACF,MAAAA,IAAI,EAAEA,IAAI,GAAGG,MAAM,CAACH,IAAD,CAAT,GAAkB,IAA7B;AAAmCI,MAAAA,IAAI,EAAEH;AAAzC,KADG,GAEHI,SAFJ;AAGD,GAPoC,CASrC;;;AACAC,EAAAA,aAAa,GAAG;AACd,UAAMC,EAAE,GAAG,MAAMD,aAAN,EAAX;AACAC,IAAAA,EAAE,CAACC,IAAH,GAAU,eAAV;AACAD,IAAAA,EAAE,CAACE,KAAH,CAAS,cAAT,IAA2Bb,SAA3B;AACA,WAAOW,EAAP;AACD,GAfoC,CAiBrC;;;AACAG,EAAAA,MAAM,CAACH,EAAD,EAAK;AACT,WAAQ,wBAAuBA,EAAE,CAACI,QAAH,GAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAC,CAAxB,CAA2B,GAA1D;AACD,GApBoC,CAsBrC;;;AACAC,EAAAA,MAAM,GAAG;AACP,WAAO,kBAAP;AACD;;AAzBoC;;AA4BvChB,aAAa,CAACiB,SAAd,CAAwBC,EAAxB,GAA6BnB,SAA7B;AACAC,aAAa,CAACiB,SAAd,CAAwBvB,MAAxB,GAAiCA,MAAjC;AACAM,aAAa,CAACiB,SAAd,CAAwBpB,MAAxB,GAAiCA,MAAjC;AAEAsB,MAAM,CAACC,OAAP,GAAiBpB,aAAjB","sourcesContent":["'use strict'\r\n\r\nconst {Socket} = require('net')\r\nconst Connection = require('@xmpp/connection')\r\nconst {Parser} = require('@xmpp/xml')\r\nconst {parseURI} = require('@xmpp/connection/lib/util')\r\n\r\nconst NS_STREAM = 'http://etherx.jabber.org/streams'\r\n\r\n/* References\r\n * Extensible Messaging and Presence Protocol (XMPP): Core http://xmpp.org/rfcs/rfc6120.html\r\n */\r\nclass ConnectionTCP extends Connection {\r\n  socketParameters(service) {\r\n    const {port, hostname, protocol} = parseURI(service)\r\n\r\n    return protocol === 'xmpp:'\r\n      ? {port: port ? Number(port) : null, host: hostname}\r\n      : undefined\r\n  }\r\n\r\n  // https://xmpp.org/rfcs/rfc6120.html#streams-open\r\n  headerElement() {\r\n    const el = super.headerElement()\r\n    el.name = 'stream:stream'\r\n    el.attrs['xmlns:stream'] = NS_STREAM\r\n    return el\r\n  }\r\n\r\n  // https://xmpp.org/rfcs/rfc6120.html#streams-open\r\n  header(el) {\r\n    return `<?xml version='1.0'?>${el.toString().slice(0, -2)}>`\r\n  }\r\n\r\n  // https://xmpp.org/rfcs/rfc6120.html#streams-close\r\n  footer() {\r\n    return '</stream:stream>'\r\n  }\r\n}\r\n\r\nConnectionTCP.prototype.NS = NS_STREAM\r\nConnectionTCP.prototype.Socket = Socket\r\nConnectionTCP.prototype.Parser = Parser\r\n\r\nmodule.exports = ConnectionTCP\r\n"]},"metadata":{},"sourceType":"script"}