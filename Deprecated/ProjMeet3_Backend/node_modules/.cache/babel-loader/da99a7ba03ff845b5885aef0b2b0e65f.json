{"ast":null,"code":"'use strict';\n\nif (typeof BigInt === 'function') {\n  var bigIntValueOf = BigInt.prototype.valueOf;\n\n  var tryBigInt = function tryBigIntObject(value) {\n    try {\n      bigIntValueOf.call(value);\n      return true;\n    } catch (e) {}\n\n    return false;\n  };\n\n  module.exports = function isBigInt(value) {\n    if (value === null || typeof value === 'undefined' || typeof value === 'boolean' || typeof value === 'string' || typeof value === 'number' || typeof value === 'symbol' || typeof value === 'function') {\n      return false;\n    }\n\n    if (typeof value === 'bigint') {\n      // eslint-disable-line valid-typeof\n      return true;\n    }\n\n    return tryBigInt(value);\n  };\n} else {\n  module.exports = function isBigInt(value) {\n    return false && value;\n  };\n}","map":{"version":3,"sources":["C:/Users/Jose Johnson/Desktop/KanScrubs/random/node_modules/is-bigint/index.js"],"names":["BigInt","bigIntValueOf","prototype","valueOf","tryBigInt","tryBigIntObject","value","call","e","module","exports","isBigInt"],"mappings":"AAAA;;AAEA,IAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AACjC,MAAIC,aAAa,GAAGD,MAAM,CAACE,SAAP,CAAiBC,OAArC;;AACA,MAAIC,SAAS,GAAG,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC/C,QAAI;AACHL,MAAAA,aAAa,CAACM,IAAd,CAAmBD,KAAnB;AACA,aAAO,IAAP;AACA,KAHD,CAGE,OAAOE,CAAP,EAAU,CACX;;AACD,WAAO,KAAP;AACA,GAPD;;AASAC,EAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBL,KAAlB,EAAyB;AACzC,QACCA,KAAK,KAAK,IAAV,IACG,OAAOA,KAAP,KAAiB,WADpB,IAEG,OAAOA,KAAP,KAAiB,SAFpB,IAGG,OAAOA,KAAP,KAAiB,QAHpB,IAIG,OAAOA,KAAP,KAAiB,QAJpB,IAKG,OAAOA,KAAP,KAAiB,QALpB,IAMG,OAAOA,KAAP,KAAiB,UAPrB,EAQE;AACD,aAAO,KAAP;AACA;;AACD,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAAE;AAChC,aAAO,IAAP;AACA;;AAED,WAAOF,SAAS,CAACE,KAAD,CAAhB;AACA,GAjBD;AAkBA,CA7BD,MA6BO;AACNG,EAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBL,KAAlB,EAAyB;AACzC,WAAO,SAASA,KAAhB;AACA,GAFD;AAGA","sourcesContent":["'use strict';\r\n\r\nif (typeof BigInt === 'function') {\r\n\tvar bigIntValueOf = BigInt.prototype.valueOf;\r\n\tvar tryBigInt = function tryBigIntObject(value) {\r\n\t\ttry {\r\n\t\t\tbigIntValueOf.call(value);\r\n\t\t\treturn true;\r\n\t\t} catch (e) {\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tmodule.exports = function isBigInt(value) {\r\n\t\tif (\r\n\t\t\tvalue === null\r\n\t\t\t|| typeof value === 'undefined'\r\n\t\t\t|| typeof value === 'boolean'\r\n\t\t\t|| typeof value === 'string'\r\n\t\t\t|| typeof value === 'number'\r\n\t\t\t|| typeof value === 'symbol'\r\n\t\t\t|| typeof value === 'function'\r\n\t\t) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (typeof value === 'bigint') { // eslint-disable-line valid-typeof\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn tryBigInt(value);\r\n\t};\r\n} else {\r\n\tmodule.exports = function isBigInt(value) {\r\n\t\treturn false && value;\r\n\t};\r\n}\r\n"]},"metadata":{},"sourceType":"script"}