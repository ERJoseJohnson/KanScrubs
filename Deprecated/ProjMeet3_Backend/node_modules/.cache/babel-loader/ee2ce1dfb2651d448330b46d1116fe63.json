{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nlet FileViewerType = {\n  \"USER\": \"user\",\n  \"ROOM\": \"room\"\n};\n/*\r\ninterface IFileViewer {\r\n    viewerId: string;\r\n    type: FileViewerType;\r\n    contact: any;\r\n}\r\n// */\n\n/**\r\n * @public\r\n * @class\r\n * @name FileViewer\r\n * @description\r\n *      This class is used to represent a File Viewer who is the list of persons (individual or a bubble) that can access (download) the file.\r\n */\n\nclass FileViewer\n/* implements IFileViewer */\n{\n  /*    public viewerId: string;\r\n      public type: FileViewerType;\r\n      public contact: any;\r\n      private _avatarSrc: any;\r\n  */\n\n  /**\r\n   * @this FileViewer\r\n   */\n  constructor(viewerId\n  /*: string */\n  , type\n  /*: FileViewerType */\n  , contact\n  /*: any */\n  , _contactService\n  /*: any = null*/\n  ) {\n    this.contactService = _contactService;\n    /**\r\n     * @public\r\n     * @property {String} viewerId The id of the viewer\r\n     * @readonly\r\n     */\n\n    this.viewerId = viewerId;\n    /**\r\n     * @public\r\n     * @property {string} type The type of viewer: 'user' for a contact or 'room' for a bubble\r\n     * @readonly\r\n     */\n\n    this.type = type;\n    /**\r\n     * @public\r\n     * @property {Contact} contact The contact\r\n     * @readonly\r\n     */\n\n    this.contact = contact;\n    this._avatarSrc = null;\n  }\n\n  get avatarSrc() {\n    if (this.contact) {\n      this._avatarSrc = this.contact.avatar.src;\n    } else {\n      this._avatarSrc = null;\n      this.contactService.getContactByDBId(this.viewerId).then(contact => {\n        this.contact = contact;\n        this._avatarSrc = this.contact.avatar.src;\n      });\n    }\n\n    return this._avatarSrc;\n  }\n\n}\n\nexports.FileViewer = FileViewer;\n/*\r\nfunction FileViewerFactory() {\r\n    return (data: any): FileViewer[] => {\r\n        let viewers: FileViewer[] = [];\r\n        for (let viewerData of data) {\r\n            viewers.push(new FileViewer(viewerData.viewerId, viewerData.type, viewerData.contact, viewerData.contactService));\r\n        }\r\n        return viewers;\r\n    };\r\n}\r\n// */\n\nfunction FileViewerElementFactory(viewerId, type, contact, contactService) {\n  //return (viewerId, type, contact, contactService): FileViewer => {\n  return new FileViewer(viewerId, type, contact, contactService); //};\n}\n\nexports.FileViewerElementFactory = FileViewerElementFactory;\nmodule.exports.FileViewer = FileViewer;\nmodule.exports.FileViewerElementFactory = FileViewerElementFactory;","map":{"version":3,"sources":["../../../src/lib/common/models/FileViewer.ts"],"names":[],"mappings":"AAAA;;;;;AAGA,IAAI,cAAc,GAAG;AACjB,UAAS,MADQ;AAEjB,UAAS;AAFQ,CAArB;AAKA;;;;;;;;AAOA;;;;;;;;AAOA,MAAM;AAAW;AAA4B;AAO7C;;;;;;AAKI;;;AAGA,EAAA,WAAA,CACI;AAAQ;AADZ,IAEI;AAAI;AAFR,IAGI;AAAO;AAHX,IAII;AAAe;AAJnB,IAImC;AAC/B,SAAK,cAAL,GAAsB,eAAtB;AACA;;;;;;AAKA,SAAK,QAAL,GAAgB,QAAhB;AAEA;;;;;;AAKA,SAAK,IAAL,GAAY,IAAZ;AAEA;;;;;;AAKA,SAAK,OAAL,GAAe,OAAf;AAEA,SAAK,UAAL,GAAkB,IAAlB;AACH;;AAED,MAAI,SAAJ,GAAa;AACT,QAAI,KAAK,OAAT,EAAkB;AAAE,WAAK,UAAL,GAAkB,KAAK,OAAL,CAAa,MAAb,CAAoB,GAAtC;AAA4C,KAAhE,MACK;AACD,WAAK,UAAL,GAAkB,IAAlB;AACA,WAAK,cAAL,CAAoB,gBAApB,CAAqC,KAAK,QAA1C,EACK,IADL,CACW,OAAD,IAAY;AACd,aAAK,OAAL,GAAe,OAAf;AACA,aAAK,UAAL,GAAkB,KAAK,OAAL,CAAa,MAAb,CAAoB,GAAtC;AACH,OAJL;AAKH;;AACD,WAAO,KAAK,UAAZ;AACH;;AAxDwC;;AA+EX,OAAA,CAAA,UAAA,GAAA,UAAA;AApBlC;;;;;;;;;;;;AAYA,SAAS,wBAAT,CAAkC,QAAlC,EAA4C,IAA5C,EAAkD,OAAlD,EAA2D,cAA3D,EAAyE;AACrE;AACI,SAAO,IAAI,UAAJ,CAAe,QAAf,EAAyB,IAAzB,EAA+B,OAA/B,EAAwC,cAAxC,CAAP,CAFiE,CAGrE;AACH;;AAIO,OAAA,CAAA,wBAAA,GAAA,wBAAA;AAFR,MAAM,CAAC,OAAP,CAAe,UAAf,GAA4B,UAA5B;AACA,MAAM,CAAC,OAAP,CAAe,wBAAf,GAA0C,wBAA1C","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nlet FileViewerType = {\r\n    \"USER\": \"user\",\r\n    \"ROOM\": \"room\"\r\n};\r\n/*\r\ninterface IFileViewer {\r\n    viewerId: string;\r\n    type: FileViewerType;\r\n    contact: any;\r\n}\r\n// */\r\n/**\r\n * @public\r\n * @class\r\n * @name FileViewer\r\n * @description\r\n *      This class is used to represent a File Viewer who is the list of persons (individual or a bubble) that can access (download) the file.\r\n */\r\nclass FileViewer /* implements IFileViewer */ {\r\n    /*    public viewerId: string;\r\n        public type: FileViewerType;\r\n        public contact: any;\r\n        private _avatarSrc: any;\r\n    */\r\n    /**\r\n     * @this FileViewer\r\n     */\r\n    constructor(viewerId /*: string */, type /*: FileViewerType */, contact /*: any */, _contactService /*: any = null*/) {\r\n        this.contactService = _contactService;\r\n        /**\r\n         * @public\r\n         * @property {String} viewerId The id of the viewer\r\n         * @readonly\r\n         */\r\n        this.viewerId = viewerId;\r\n        /**\r\n         * @public\r\n         * @property {string} type The type of viewer: 'user' for a contact or 'room' for a bubble\r\n         * @readonly\r\n         */\r\n        this.type = type;\r\n        /**\r\n         * @public\r\n         * @property {Contact} contact The contact\r\n         * @readonly\r\n         */\r\n        this.contact = contact;\r\n        this._avatarSrc = null;\r\n    }\r\n    get avatarSrc() {\r\n        if (this.contact) {\r\n            this._avatarSrc = this.contact.avatar.src;\r\n        }\r\n        else {\r\n            this._avatarSrc = null;\r\n            this.contactService.getContactByDBId(this.viewerId)\r\n                .then((contact) => {\r\n                this.contact = contact;\r\n                this._avatarSrc = this.contact.avatar.src;\r\n            });\r\n        }\r\n        return this._avatarSrc;\r\n    }\r\n}\r\nexports.FileViewer = FileViewer;\r\n/*\r\nfunction FileViewerFactory() {\r\n    return (data: any): FileViewer[] => {\r\n        let viewers: FileViewer[] = [];\r\n        for (let viewerData of data) {\r\n            viewers.push(new FileViewer(viewerData.viewerId, viewerData.type, viewerData.contact, viewerData.contactService));\r\n        }\r\n        return viewers;\r\n    };\r\n}\r\n// */\r\nfunction FileViewerElementFactory(viewerId, type, contact, contactService) {\r\n    //return (viewerId, type, contact, contactService): FileViewer => {\r\n    return new FileViewer(viewerId, type, contact, contactService);\r\n    //};\r\n}\r\nexports.FileViewerElementFactory = FileViewerElementFactory;\r\nmodule.exports.FileViewer = FileViewer;\r\nmodule.exports.FileViewerElementFactory = FileViewerElementFactory;\r\n//# sourceMappingURL=FileViewer.js.map"]},"metadata":{},"sourceType":"script"}