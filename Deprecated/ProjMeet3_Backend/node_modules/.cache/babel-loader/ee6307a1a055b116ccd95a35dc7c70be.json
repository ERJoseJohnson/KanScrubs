{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* module.exports = function () {\r\n    return 'Hello, world! it is queue!';\r\n}; // */\n//var intanceofXmppQueue = undefined;\n\nlet LOG_ID = 'XMPPQUEUE';\n\nclass XmppQueue {\n  constructor(_logger) {\n    this.logger = _logger; // Temp to be changed\n\n    this.requestsToSend = Promise.resolve();\n  }\n\n  addPromise(promiseFactory) {\n    let that = this;\n    that.logger.log(\"debug\", LOG_ID + \"(addPromise) _entering_\");\n    this.requestsToSend = this.requestsToSend.then(() => {\n      that.logger.log(\"debug\", LOG_ID + \"(addPromise) promise storing\");\n      return promiseFactory;\n    }).catch(() => {\n      that.logger.log(\"error\", LOG_ID + \"(addPromise) Catch Error, but promise storing.\", promiseFactory);\n      return promiseFactory;\n    });\n    return this.requestsToSend;\n  }\n\n  addCallback(callback) {\n    let that = this;\n    that.logger.log(\"debug\", LOG_ID + \"(addCallback) _entering_\");\n    return this.addPromise(new Promise((resolve, reject) => {\n      that.logger.log(\"debug\", LOG_ID + \"(addCallback) inside promise\");\n      callback(resolve, reject); //resolve(json.data);\n      //reject(err);\n    }));\n  }\n\n}\n\nfunction getXmppQueue(_logger) {\n  return new XmppQueue(_logger);\n  /*\r\n      if (intanceofXmppQueue == undefined) {\r\n          // Instantiate the SDK\r\n          intanceofXmppQueue = new XmppQueue();\r\n      } else {\r\n  \r\n      }\r\n      return intanceofXmppQueue;\r\n  */\n}\n\nmodule.exports.getXmppQueue = getXmppQueue;","map":{"version":3,"sources":["../../../src/lib/common/XmppQueue/XmppQueue.ts"],"names":[],"mappings":"AAAA;;;;;AAIA;;;AAIA;;AACA,IAAI,MAAM,GAAG,WAAb;;AAEA,MAAM,SAAN,CAAe;AAIX,EAAA,WAAA,CAAY,OAAZ,EAAmB;AACf,SAAK,MAAL,GAAc,OAAd,CADe,CACQ;;AACvB,SAAK,cAAL,GAAsB,OAAO,CAAC,OAAR,EAAtB;AACH;;AAED,EAAA,UAAU,CAAC,cAAD,EAAe;AACrB,QAAI,IAAI,GAAG,IAAX;AACA,IAAA,IAAI,CAAC,MAAL,CAAY,GAAZ,CAAgB,OAAhB,EAAyB,MAAM,GAAG,yBAAlC;AACA,SAAK,cAAL,GAAsB,KAAK,cAAL,CAAoB,IAApB,CAAyB,MAAK;AAChD,MAAA,IAAI,CAAC,MAAL,CAAY,GAAZ,CAAgB,OAAhB,EAAyB,MAAM,GAAG,8BAAlC;AACA,aAAO,cAAP;AACH,KAHqB,EAGnB,KAHmB,CAGb,MAAK;AACV,MAAA,IAAI,CAAC,MAAL,CAAY,GAAZ,CAAgB,OAAhB,EAAyB,MAAM,GAAG,gDAAlC,EAAoF,cAApF;AACA,aAAO,cAAP;AACH,KANqB,CAAtB;AAOA,WAAO,KAAK,cAAZ;AACH;;AAID,EAAA,WAAW,CAAC,QAAD,EAAS;AAChB,QAAI,IAAI,GAAG,IAAX;AACA,IAAA,IAAI,CAAC,MAAL,CAAY,GAAZ,CAAgB,OAAhB,EAAyB,MAAM,GAAG,0BAAlC;AACA,WAAO,KAAK,UAAL,CAAgB,IAAI,OAAJ,CAAY,CAAC,OAAD,EAAU,MAAV,KAAoB;AACnD,MAAA,IAAI,CAAC,MAAL,CAAY,GAAZ,CAAgB,OAAhB,EAAyB,MAAM,GAAG,8BAAlC;AAEA,MAAA,QAAQ,CAAC,OAAD,EAAU,MAAV,CAAR,CAHmD,CAInD;AACA;AACH,KANsB,CAAhB,CAAP;AAOH;;AAlCU;;AAsCf,SAAS,YAAT,CAAsB,OAAtB,EAA6B;AACzB,SAAO,IAAI,SAAJ,CAAc,OAAd,CAAP;AACJ;;;;;;;;;AASC;;AAED,MAAM,CAAC,OAAP,CAAe,YAAf,GAA8B,YAA9B","sourceRoot":"","sourcesContent":["'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/* module.exports = function () {\r\n    return 'Hello, world! it is queue!';\r\n}; // */\r\n//var intanceofXmppQueue = undefined;\r\nlet LOG_ID = 'XMPPQUEUE';\r\nclass XmppQueue {\r\n    constructor(_logger) {\r\n        this.logger = _logger; // Temp to be changed\r\n        this.requestsToSend = Promise.resolve();\r\n    }\r\n    addPromise(promiseFactory) {\r\n        let that = this;\r\n        that.logger.log(\"debug\", LOG_ID + \"(addPromise) _entering_\");\r\n        this.requestsToSend = this.requestsToSend.then(() => {\r\n            that.logger.log(\"debug\", LOG_ID + \"(addPromise) promise storing\");\r\n            return promiseFactory;\r\n        }).catch(() => {\r\n            that.logger.log(\"error\", LOG_ID + \"(addPromise) Catch Error, but promise storing.\", promiseFactory);\r\n            return promiseFactory;\r\n        });\r\n        return this.requestsToSend;\r\n    }\r\n    addCallback(callback) {\r\n        let that = this;\r\n        that.logger.log(\"debug\", LOG_ID + \"(addCallback) _entering_\");\r\n        return this.addPromise(new Promise((resolve, reject) => {\r\n            that.logger.log(\"debug\", LOG_ID + \"(addCallback) inside promise\");\r\n            callback(resolve, reject);\r\n            //resolve(json.data);\r\n            //reject(err);\r\n        }));\r\n    }\r\n}\r\nfunction getXmppQueue(_logger) {\r\n    return new XmppQueue(_logger);\r\n    /*\r\n        if (intanceofXmppQueue == undefined) {\r\n            // Instantiate the SDK\r\n            intanceofXmppQueue = new XmppQueue();\r\n        } else {\r\n    \r\n        }\r\n        return intanceofXmppQueue;\r\n    */\r\n}\r\nmodule.exports.getXmppQueue = getXmppQueue;\r\n//# sourceMappingURL=XmppQueue.js.map"]},"metadata":{},"sourceType":"script"}