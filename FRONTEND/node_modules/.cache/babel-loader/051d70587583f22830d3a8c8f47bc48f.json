{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Johnson\\\\Desktop\\\\KanScrubs\\\\FRONTEND\\\\src\\\\App (2).js\";\nimport React from 'react';\nimport './App.css';\nimport Chatbox from \"./chat_ui/Chatbox\";\nimport \"tachyons\";\nimport Login_n from \"./login/Login_n\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.updateHistory = event => {\n      event.preventDefault();\n      this.setState({\n        stored_value: event.target[0].value\n      });\n    };\n\n    this.login = (username, password, queryType) => {\n      console.log(username);\n      const customerCreds = {\n        username: username,\n        password: password,\n        queryType: queryType\n      };\n      console.log(customerCreds);\n      let route = 'http://localhost:3001/login/'.concat(username);\n      console.log(route);\n      let stateOfReq = \"false\";\n\n      while (stateOfReq == \"false\") {\n        if (this.state.message == \"\") {\n          this.setState({\n            message: \"matching you with an agent ! Plase wait\"\n          });\n          l;\n          this.render();\n        }\n\n        axios.post(route, customerCreds).then(response => {\n          console.log(response.data);\n          stateOfReq = response.data.success;\n          let customerID = response.data.customer;\n          let agentID = response.data.agent;\n        }, error => {\n          console.log(error);\n        });\n      }\n\n      this.setState({\n        loggedin: 1\n      });\n      console.log(\"logged in \");\n    };\n\n    this.signout = () => {\n      window.location.reload(true);\n    };\n\n    this.doSomethingBeforeUnload = () => {\n      // Do something\n      window.alert(\"Are you sure you want to close ? \");\n    };\n\n    this.setupBeforeUnloadListener = () => {\n      window.addEventListener(\"beforeunload\", ev => {\n        ev.preventDefault();\n        ev.returnValue(\"are you sure you want to leave\");\n        return this.doSomethingBeforeUnload();\n      });\n    };\n\n    this.test = () => {\n      if (this.state.loggedin == 0) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          classname: \"tc\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }\n        }, this.state.message), /*#__PURE__*/React.createElement(Login_n, {\n          userInfo: this.state,\n          onSubmit: this.login,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Chatbox, {\n          history: this.state.history,\n          onMessage: this.updateHistory,\n          signOut: this.signout,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }\n        })));\n      }\n    };\n\n    this.state = {\n      stored_value: \"Your Message will appear hear\",\n      loggedin: 0,\n      history: [],\n      userName: \"\",\n      password: \"\",\n      queryType: \"\",\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // Activate the event listener\n    this.setupBeforeUnloadListener();\n  }\n\n  render() {\n    return this.test();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Jose Johnson/Desktop/KanScrubs/FRONTEND/src/App (2).js"],"names":["React","Chatbox","Login_n","axios","App","Component","constructor","updateHistory","event","preventDefault","setState","stored_value","target","value","login","username","password","queryType","console","log","customerCreds","route","concat","stateOfReq","state","message","l","render","post","then","response","data","success","customerID","customer","agentID","agent","error","loggedin","signout","window","location","reload","doSomethingBeforeUnload","alert","setupBeforeUnloadListener","addEventListener","ev","returnValue","test","history","userName","componentDidMount"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Chatbox from \"./chat_ui/Chatbox\";\r\nimport \"tachyons\";\r\nimport Login_n from \"./login/Login_n\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      stored_value: \"Your Message will appear hear\",\r\n      loggedin: 0,\r\n      history: [],\r\n      userName: \"\",\r\n      password: \"\",\r\n      queryType: \"\",\r\n      message: \"\",\r\n    }\r\n\r\n\r\n  }\r\n\r\n  updateHistory = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ stored_value: event.target[0].value });\r\n  };\r\n\r\n  login = (username, password, queryType) => {\r\n    console.log(username);\r\n    const customerCreds = {\r\n      username: username,\r\n      password: password,\r\n      queryType: queryType\r\n    }\r\n    console.log(customerCreds);\r\n    let route = 'http://localhost:3001/login/'.concat(username);\r\n    console.log(route);\r\n\r\n    let stateOfReq = \"false\";\r\n    while (stateOfReq == \"false\") {\r\n      if (this.state.message == \"\") {\r\n        this.setState({ message: \"matching you with an agent ! Plase wait\" }); l\r\n        this.render();\r\n      }\r\n\r\n      axios.post(route, customerCreds)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          stateOfReq = response.data.success\r\n          let customerID = response.data.customer\r\n          let agentID = response.data.agent\r\n        }, (error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    this.setState({ loggedin: 1 });\r\n\r\n    console.log(\"logged in \")\r\n  };\r\n\r\n  signout = () => {\r\n    window.location.reload(true);\r\n  }\r\n\r\n  // Things to do before unloading/closing the tab\r\n  doSomethingBeforeUnload = () => {\r\n    // Do something\r\n    window.alert(\"Are you sure you want to close ? \")\r\n  }\r\n\r\n  // Setup the `beforeunload` event listener\r\n  setupBeforeUnloadListener = () => {\r\n    window.addEventListener(\"beforeunload\", (ev) => {\r\n      ev.preventDefault();\r\n\r\n      ev.returnValue(\"are you sure you want to leave\")\r\n      return this.doSomethingBeforeUnload();\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Activate the event listener\r\n    this.setupBeforeUnloadListener();\r\n  }\r\n\r\n\r\n\r\n  test = () => {\r\n    if (this.state.loggedin == 0) {\r\n      return (\r\n        <div>\r\n          <p classname=\"tc\">{this.state.message}</p>\r\n          <Login_n userInfo={this.state} onSubmit={this.login} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div className=\"\"><Chatbox history={this.state.history} onMessage={this.updateHistory} signOut={this.signout} /></div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      this.test()\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}