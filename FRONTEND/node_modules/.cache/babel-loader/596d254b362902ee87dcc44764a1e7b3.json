{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Johnson\\\\Desktop\\\\KanScrubs\\\\FRONTEND\\\\src\\\\chat_ui\\\\Chatbox.js\";\nimport React from \"react\";\nimport ChatHistory from \"./ChatHistory\";\nimport FormInp from \"./FormInp\";\nimport \"./chat.css\";\nimport send from \"./rainbow/Send\";\nimport axios from \"axios\";\nimport rainbowSDK from 'rainbow-web-sdk';\nvar outgoingMessage;\nvar incomingMessage = '';\nvar prevIncomingMessage = '';\n\nclass Chatbox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.msgEnd = React.createRef();\n    this.state = {\n      companyName: 1,\n      stored_value: \"Your Message will appear hear\",\n      history: this.props.history\n    };\n\n    this.updateHistory = event => {\n      event.preventDefault();\n      var new_history = this.props.history; // Just created a file bound variable to use with the getData() method\n\n      outgoingMessage = event.target[0].value;\n      console.log(\"APSDOKAOPSDKPAOSKDP\");\n      let jid = this.props.agent; //'e887cc4d73c1483eba4e2214798d196c@sandbox-all-in-one-rbx-prod-1.rainbow.sbg'\n\n      let myContact = rainbowSDK.contacts.getContactByJID(jid);\n      console.log(myContact);\n      rainbowSDK.conversations.openConversationForContact(myContact).then(conversation => {\n        rainbowSDK.im.sendMessageToConversation(conversation, outgoingMessage);\n      }).catch(err => {\n        console.log(err);\n      });\n      new_history.push({\n        user: \"You\",\n        message: outgoingMessage\n      });\n      super.setState({\n        history: new_history\n      });\n      this.setState({\n        companyName: 0\n      }); // Sedning new message as POST request to server\n      // postData(outgoingMessage);\n      //send(event.target[0].value) ; \n      // try {\n      //     const response = axios.post('http://localhost:8080/customerMessage', { incomingMessage: 'Hi there' });\n      //     console.log('ðŸ‘‰ Returned data:', response);\n      // } catch (e) {\n      //     console.log(`ðŸ˜± Axios request failed: ${e}`);\n      // }\n      //http://localhost:8080/customerMessage\n      // axios.post('http://10.12.84.5:8080/customerMessage', {\n      //     incomingMessage: outgoingMessage\n      // })\n      //     .then((response) => {\n      //         console.log(response);\n      //     }, (error) => {\n      //         console.log(error);\n      //     });\n      // send a post request \n      // axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\n      //     .then((response) => {\n      //         console.log(response);\n      //     })\n    };\n\n    this.receiveMessage = async () => {\n      axios.get('http://10.12.84.5:8080/adminResponse', {\n        success: \"Received admin message\"\n      }).then(response => {\n        //if (incomingMessage != response.adminResponse) {\n        console.log(response.data);\n        console.log(\"this is the response from server\", response.data.adminResponse);\n        var new_history = this.state.history; // Just created a file bound variable to use with the getData() method\n\n        incomingMessage = response.data.adminResponse;\n        console.log(\"This is the incoming\", incomingMessage);\n        console.log(\"This is the previous one\", prevIncomingMessage);\n\n        if (incomingMessage != prevIncomingMessage && incomingMessage != null) {\n          prevIncomingMessage = response.data.adminResponse;\n          console.log(\"in the receiveMessage part\");\n          this.updateAdminMessages();\n        }\n\n        this.render();\n      }); //console.log(response);\n      //console.log(\"klsdfjaslkdfjslad\");\n      // if (prevIncomingMessage !== incomingMessage) {\n      //     prevIncomingMessage = response.adminResponse;\n      //     new_history.push({ user: \"admin\", message: incomingMessage });\n      //     super.setState({ history: new_history });\n      // }\n    };\n\n    this.updateAdminMessages = () => {\n      var new_history = this.state.history;\n      new_history.push({\n        user: \"admin\",\n        message: incomingMessage\n      });\n      super.setState({\n        history: new_history\n      });\n      console.log(\"Updated admind messages\");\n    };\n  }\n\n  render() {\n    this.receiveMessage();\n    console.log(\"rendering......\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"par\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"logout br2 shadow grow\",\n      onClick: this.props.signOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"SIGN OUT\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatBox pb2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"head1 pb1 pa4 tc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"ALCATEL\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chatHis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ChatHistory, {\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 46\n      }\n    })), /*#__PURE__*/React.createElement(FormInp, {\n      onSubmit: this.updateHistory,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    })));\n  }\n\n} // receiveMessage = () => {\n//     axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\n//         .then((response) => {\n//             //if (incomingMessage != response.adminResponse) {\n//             console.log(response.adminResponse);\n//             var new_history = this.state.history;\n//             // Just created a file bound variable to use with the getData() method\n//             incomingMessage = response.adminResponse;\n//         })\n//     console.log(response);\n//     //console.log(\"klsdfjaslkdfjslad\");\n//     // if (prevIncomingMessage !== incomingMessage) {\n//     //     prevIncomingMessage = response.adminResponse;\n//     //     new_history.push({ user: \"admin\", message: incomingMessage });\n//     //     super.setState({ history: new_history });\n//     // }\n// }\n// updateAdminMessages = () => {\n//     prevIncomingMessage = response.adminResponse;\n//     new_history.push({ user: \"admin\", message: incomingMessage });\n//     super.setState({ history: new_history });\n//     console.log(\"Updated admind messages\");\n// }\n\n\nexport default Chatbox;\n{\n  /* <div className=\"ba bw2 pa2 bg-light-yellow br4\" >\r\n  \n  <div className=\"chatbox\"><ChatHistory history={this.state.history} /></div>\r\n  <FormInp onSubmit={this.updateHistory} history={this.state.history} />\r\n  \n  </div> */\n}","map":{"version":3,"sources":["C:/Users/Jose Johnson/Desktop/KanScrubs/FRONTEND/src/chat_ui/Chatbox.js"],"names":["React","ChatHistory","FormInp","send","axios","rainbowSDK","outgoingMessage","incomingMessage","prevIncomingMessage","Chatbox","Component","msgEnd","createRef","state","companyName","stored_value","history","props","updateHistory","event","preventDefault","new_history","target","value","console","log","jid","agent","myContact","contacts","getContactByJID","conversations","openConversationForContact","then","conversation","im","sendMessageToConversation","catch","err","push","user","message","setState","receiveMessage","get","success","response","data","adminResponse","updateAdminMessages","render","signOut"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,IAAIC,eAAJ;AACA,IAAIC,eAAe,GAAG,EAAtB;AACA,IAAIC,mBAAmB,GAAG,EAA1B;;AAIA,MAAMC,OAAN,SAAsBT,KAAK,CAACU,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAGlCC,MAHkC,GAGzBX,KAAK,CAACY,SAAN,EAHyB;AAAA,SAIlCC,KAJkC,GAI1B;AACJC,MAAAA,WAAW,EAAE,CADT;AAEJC,MAAAA,YAAY,EAAE,+BAFV;AAGJC,MAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD;AAHhB,KAJ0B;;AAAA,SAkBlCE,aAlBkC,GAkBjBC,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,WAAW,GAAG,KAAKJ,KAAL,CAAWD,OAA7B,CAFuB,CAGvB;;AACAV,MAAAA,eAAe,GAAGa,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgBC,KAAlC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,UAAIC,GAAG,GAAG,KAAKT,KAAL,CAAWU,KAArB,CANuB,CAMK;;AAC5B,UAAIC,SAAS,GAAGvB,UAAU,CAACwB,QAAX,CAAoBC,eAApB,CAAoCJ,GAApC,CAAhB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACAvB,MAAAA,UAAU,CAAC0B,aAAX,CAAyBC,0BAAzB,CAAoDJ,SAApD,EAA+DK,IAA/D,CAAqEC,YAAD,IAAkB;AAClF7B,QAAAA,UAAU,CAAC8B,EAAX,CAAcC,yBAAd,CAAwCF,YAAxC,EAAsD5B,eAAtD;AACH,OAFD,EAEG+B,KAFH,CAEUC,GAAD,IAAS;AACdd,QAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACH,OAJD;AAKAjB,MAAAA,WAAW,CAACkB,IAAZ,CAAiB;AAAEC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,OAAO,EAAEnC;AAAxB,OAAjB;AACA,YAAMoC,QAAN,CAAe;AAAE1B,QAAAA,OAAO,EAAEK;AAAX,OAAf;AACA,WAAKqB,QAAL,CAAc;AAAE5B,QAAAA,WAAW,EAAE;AAAf,OAAd,EAhBuB,CAiBvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACH,KA5DiC;;AAAA,SA8DlC6B,cA9DkC,GA8DjB,YAAY;AACzBvC,MAAAA,KAAK,CAACwC,GAAN,CAAU,sCAAV,EAAkD;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAlD,EACKZ,IADL,CACWa,QAAD,IAAc;AAChB;AACAtB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAQ,CAACC,IAArB;AACAvB,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDqB,QAAQ,CAACC,IAAT,CAAcC,aAA9D;AACA,YAAI3B,WAAW,GAAG,KAAKR,KAAL,CAAWG,OAA7B,CAJgB,CAKhB;;AACAT,QAAAA,eAAe,GAAGuC,QAAQ,CAACC,IAAT,CAAcC,aAAhC;AACAxB,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoClB,eAApC;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCjB,mBAAxC;;AACA,YAAID,eAAe,IAAIC,mBAAnB,IAA0CD,eAAe,IAAI,IAAjE,EAAuE;AACnEC,UAAAA,mBAAmB,GAAGsC,QAAQ,CAACC,IAAT,CAAcC,aAApC;AACAxB,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,eAAKwB,mBAAL;AAEH;;AACD,aAAKC,MAAL;AACH,OAjBL,EADyB,CAmBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAxFiC;;AAAA,SAyFlCD,mBAzFkC,GAyFZ,MAAM;AACxB,UAAI5B,WAAW,GAAG,KAAKR,KAAL,CAAWG,OAA7B;AACAK,MAAAA,WAAW,CAACkB,IAAZ,CAAiB;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAElC;AAA1B,OAAjB;AACA,YAAMmC,QAAN,CAAe;AAAE1B,QAAAA,OAAO,EAAEK;AAAX,OAAf;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,KA9FiC;AAAA;;AAgGlCyB,EAAAA,MAAM,GAAG;AACL,SAAKP,cAAL;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,wBAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAA2C,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWkC,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKlC,KAAL,CAAWD,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,CAFJ,eAGI,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAE,KAAKE,aAAxB;AAAuC,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWD,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAJJ,CAFJ;AAgBH;;AAnHiC,C,CAsHtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeP,OAAf;AAGA;AAAC;;;;;;AAKS","sourcesContent":["import React from \"react\";\r\nimport ChatHistory from \"./ChatHistory\";\r\nimport FormInp from \"./FormInp\";\r\nimport \"./chat.css\";\r\nimport send from \"./rainbow/Send\";\r\nimport axios from \"axios\";\r\nimport rainbowSDK from 'rainbow-web-sdk';\r\n\r\nvar outgoingMessage;\r\nvar incomingMessage = '';\r\nvar prevIncomingMessage = '';\r\n\r\n\r\n\r\nclass Chatbox extends React.Component {\r\n    //constructor() {\r\n\r\n    msgEnd = React.createRef();\r\n    state = {\r\n        companyName: 1,\r\n        stored_value: \"Your Message will appear hear\",\r\n        history: this.props.history,\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //}\r\n\r\n\r\n    updateHistory = (event) => {\r\n        event.preventDefault();\r\n        var new_history = this.props.history;\r\n        // Just created a file bound variable to use with the getData() method\r\n        outgoingMessage = event.target[0].value;\r\n        console.log(\"APSDOKAOPSDKPAOSKDP\");\r\n        let jid = this.props.agent; //'e887cc4d73c1483eba4e2214798d196c@sandbox-all-in-one-rbx-prod-1.rainbow.sbg'\r\n        let myContact = rainbowSDK.contacts.getContactByJID(jid);\r\n        console.log(myContact);\r\n        rainbowSDK.conversations.openConversationForContact(myContact).then((conversation) => {\r\n            rainbowSDK.im.sendMessageToConversation(conversation, outgoingMessage);\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n        new_history.push({ user: \"You\", message: outgoingMessage });\r\n        super.setState({ history: new_history });\r\n        this.setState({ companyName: 0 })\r\n        // Sedning new message as POST request to server\r\n        // postData(outgoingMessage);\r\n        //send(event.target[0].value) ; \r\n        // try {\r\n        //     const response = axios.post('http://localhost:8080/customerMessage', { incomingMessage: 'Hi there' });\r\n        //     console.log('ðŸ‘‰ Returned data:', response);\r\n        // } catch (e) {\r\n        //     console.log(`ðŸ˜± Axios request failed: ${e}`);\r\n        // }\r\n\r\n        //http://localhost:8080/customerMessage\r\n        // axios.post('http://10.12.84.5:8080/customerMessage', {\r\n        //     incomingMessage: outgoingMessage\r\n        // })\r\n        //     .then((response) => {\r\n        //         console.log(response);\r\n        //     }, (error) => {\r\n        //         console.log(error);\r\n        //     });\r\n        // send a post request \r\n\r\n        // axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\r\n        //     .then((response) => {\r\n        //         console.log(response);\r\n        //     })\r\n    };\r\n\r\n    receiveMessage = async () => {\r\n        axios.get('http://10.12.84.5:8080/adminResponse', { success: \"Received admin message\" })\r\n            .then((response) => {\r\n                //if (incomingMessage != response.adminResponse) {\r\n                console.log(response.data);\r\n                console.log(\"this is the response from server\", response.data.adminResponse);\r\n                var new_history = this.state.history;\r\n                // Just created a file bound variable to use with the getData() method\r\n                incomingMessage = response.data.adminResponse;\r\n                console.log(\"This is the incoming\", incomingMessage)\r\n                console.log(\"This is the previous one\", prevIncomingMessage)\r\n                if (incomingMessage != prevIncomingMessage && incomingMessage != null) {\r\n                    prevIncomingMessage = response.data.adminResponse;\r\n                    console.log(\"in the receiveMessage part\")\r\n                    this.updateAdminMessages();\r\n\r\n                }\r\n                this.render();\r\n            })\r\n        //console.log(response);\r\n        //console.log(\"klsdfjaslkdfjslad\");\r\n        // if (prevIncomingMessage !== incomingMessage) {\r\n        //     prevIncomingMessage = response.adminResponse;\r\n        //     new_history.push({ user: \"admin\", message: incomingMessage });\r\n        //     super.setState({ history: new_history });\r\n        // }\r\n    }\r\n    updateAdminMessages = () => {\r\n        var new_history = this.state.history;\r\n        new_history.push({ user: \"admin\", message: incomingMessage });\r\n        super.setState({ history: new_history });\r\n        console.log(\"Updated admind messages\");\r\n    }\r\n\r\n    render() {\r\n        this.receiveMessage();\r\n        console.log(\"rendering......\")\r\n        return (\r\n\r\n            <div className=\"par\">\r\n                <div className=\"header\">\r\n                    <button className=\"logout br2 shadow grow\" onClick={this.props.signOut}>SIGN OUT</button>\r\n                </div>\r\n                <div className=\"chatBox pb2\">\r\n                    <p className=\"head1 pb1 pa4 tc\">ALCATEL</p>\r\n                    <div className=\"chatHis\"><ChatHistory history={this.props.history} /></div>\r\n                    <FormInp onSubmit={this.updateHistory} history={this.props.history} />\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n// receiveMessage = () => {\r\n//     axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\r\n//         .then((response) => {\r\n//             //if (incomingMessage != response.adminResponse) {\r\n//             console.log(response.adminResponse);\r\n//             var new_history = this.state.history;\r\n//             // Just created a file bound variable to use with the getData() method\r\n//             incomingMessage = response.adminResponse;\r\n//         })\r\n//     console.log(response);\r\n//     //console.log(\"klsdfjaslkdfjslad\");\r\n//     // if (prevIncomingMessage !== incomingMessage) {\r\n//     //     prevIncomingMessage = response.adminResponse;\r\n//     //     new_history.push({ user: \"admin\", message: incomingMessage });\r\n//     //     super.setState({ history: new_history });\r\n//     // }\r\n// }\r\n// updateAdminMessages = () => {\r\n//     prevIncomingMessage = response.adminResponse;\r\n//     new_history.push({ user: \"admin\", message: incomingMessage });\r\n//     super.setState({ history: new_history });\r\n//     console.log(\"Updated admind messages\");\r\n// }\r\nexport default Chatbox;\r\n\r\n\r\n{/* <div className=\"ba bw2 pa2 bg-light-yellow br4\" >\r\n\r\n<div className=\"chatbox\"><ChatHistory history={this.state.history} /></div>\r\n<FormInp onSubmit={this.updateHistory} history={this.state.history} />\r\n\r\n</div> */}"]},"metadata":{},"sourceType":"module"}