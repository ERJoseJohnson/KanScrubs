{"ast":null,"code":"var _jsxFileName = \"/mnt/d/SUTD/Term 5/50.003 ESC/testrainbowreact/rainbow-react-starterkit/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App (2)';\nimport * as serviceWorker from './serviceWorker';\nimport rainbowSDK from 'rainbow-web-sdk';\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\nvar onReady = function onReady() {\n  var myRainbowLogin = \"spongebob@mymail.sutd.edu.sg\"; // Replace by your login\n\n  var myRainbowPassword = \"Kr@bbyP@tty69\"; // Replace by your password\n  // The SDK for Web is ready to be used, so you can sign in\n\n  rainbowSDK.connection.signin(myRainbowLogin, myRainbowPassword).then(function (account) {\n    // Successfully signed to Rainbow and the SDK is started completely. Rainbow data can be retrieved.\n    let onNewMessageReceived = function (event) {\n      let message = event.detail.message;\n      let conversation = event.detail.conversation;\n      let messageContent = \"\"; // Acknowledge it\n\n      rainbowSDK.im.markMessageFromConversationAsRead(conversation, message); // Text message received\n\n      messageContent = message.data; // Send an answer\n      // rainbowSDK.im.sendMessageToConversation(conversation, messageContent + \" read!\");\n\n      console.log(\"APSDOKAOPSDKPAOSKDP\");\n      let myContact = rainbowSDK.contacts.getContactByJID(\"85f5342e76c44c219eeff89d2ee49483@sandbox-all-in-one-rbx-prod-1.rainbow.sbg\");\n      console.log(myContact);\n      rainbowSDK.conversations.openConversationForContact(myContact).then(conversation => {\n        rainbowSDK.im.sendMessageToConversation(conversation, \"It works!\");\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    document.addEventListener(rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED, onNewMessageReceived);\n  }).catch(function (err) {\n    // An error occurs (e.g. bad credentials). Application could be informed that sign in has failed\n    console.log(\"ERROR\");\n  }); // Listen when the SDK is ready\n\n  document.addEventListener(rainbowSDK.RAINBOW_ONREADY, onReady);\n};\n\nvar onLoaded = function onLoaded() {\n  console.log('[Hello World] :: On SDK Loaded !');\n  rainbowSDK.initialize('82246ae05a3611eabf7e77d14e87b936', 'OLt1Qpu7fsCDNvT0r42waj0l4EeLe1Wb2nox0vpWGrpuqg4uunxwztDbJFAJKfwD').then(() => {\n    console.log('[Hello World] :: Rainbow SDK is initialized!');\n  }).catch(err => {\n    console.log('[Hello World] :: Something went wrong with the SDK.', err);\n  });\n};\n\ndocument.addEventListener(rainbowSDK.RAINBOW_ONREADY, onReady);\ndocument.addEventListener(rainbowSDK.RAINBOW_ONLOADED, onLoaded);\nrainbowSDK.start();\nrainbowSDK.load();","map":{"version":3,"sources":["/mnt/d/SUTD/Term 5/50.003 ESC/testrainbowreact/rainbow-react-starterkit/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","rainbowSDK","render","document","getElementById","unregister","onReady","myRainbowLogin","myRainbowPassword","connection","signin","then","account","onNewMessageReceived","event","message","detail","conversation","messageContent","im","markMessageFromConversationAsRead","data","console","log","myContact","contacts","getContactByJID","conversations","openConversationForContact","sendMessageToConversation","catch","err","addEventListener","RAINBOW_ONNEWIMMESSAGERECEIVED","RAINBOW_ONREADY","onLoaded","initialize","RAINBOW_ONLOADED","start","load"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App (2)';\nimport * as serviceWorker from './serviceWorker';\nimport rainbowSDK from 'rainbow-web-sdk';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nvar onReady = function onReady() {\n\n  var myRainbowLogin = \"spongebob@mymail.sutd.edu.sg\";       // Replace by your login\n  var myRainbowPassword = \"Kr@bbyP@tty69\"; // Replace by your password\n\n  // The SDK for Web is ready to be used, so you can sign in\n  rainbowSDK.connection.signin(myRainbowLogin, myRainbowPassword)\n  .then(function(account) {\n        // Successfully signed to Rainbow and the SDK is started completely. Rainbow data can be retrieved.\n        let onNewMessageReceived = function(event) {\n\n          let message = event.detail.message;\n          let conversation = event.detail.conversation;\n          let messageContent = \"\";\n    \n          // Acknowledge it\n          rainbowSDK.im.markMessageFromConversationAsRead(conversation, message);\n    \n          // Text message received\n          messageContent = message.data;\n    \n          // Send an answer\n          // rainbowSDK.im.sendMessageToConversation(conversation, messageContent + \" read!\");\n\n          console.log(\"APSDOKAOPSDKPAOSKDP\");\n          let myContact = rainbowSDK.contacts.getContactByJID(\"85f5342e76c44c219eeff89d2ee49483@sandbox-all-in-one-rbx-prod-1.rainbow.sbg\");\n          console.log(myContact);\n          rainbowSDK.conversations.openConversationForContact(myContact).then((conversation)=>{\n            rainbowSDK.im.sendMessageToConversation(conversation,\"It works!\");\n          }).catch((err)=>{\n            console.log(err)\n          })\n          \n  };\n\n  document.addEventListener(rainbowSDK.im.RAINBOW_ONNEWIMMESSAGERECEIVED, onNewMessageReceived)\n\n  })\n  .catch(function(err) {\n        // An error occurs (e.g. bad credentials). Application could be informed that sign in has failed\n        console.log(\"ERROR\");\n  });\n\n\n// Listen when the SDK is ready\ndocument.addEventListener(rainbowSDK.RAINBOW_ONREADY, onReady)\n};\n\nvar onLoaded = function onLoaded() {\n  console.log('[Hello World] :: On SDK Loaded !');\n\n  rainbowSDK\n      .initialize('82246ae05a3611eabf7e77d14e87b936', 'OLt1Qpu7fsCDNvT0r42waj0l4EeLe1Wb2nox0vpWGrpuqg4uunxwztDbJFAJKfwD')\n      .then(() => {\n          console.log('[Hello World] :: Rainbow SDK is initialized!');\n      })\n      .catch(err => {\n          console.log('[Hello World] :: Something went wrong with the SDK.', err);\n      });\n};\ndocument.addEventListener(rainbowSDK.RAINBOW_ONREADY, onReady);\n\ndocument.addEventListener(rainbowSDK.RAINBOW_ONLOADED, onLoaded);\nrainbowSDK.start();\nrainbowSDK.load();\n"]},"metadata":{},"sourceType":"module"}