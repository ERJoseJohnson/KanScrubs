{"ast":null,"code":"// let express = require(\"express\");\n// var app = express();\n// app.get('/option1', (req, res)=>{\n//     res.sendFile(__dirname + \"/views/index.html\");\n// });\nfunction send(message) {\n  let options = {\n    rainbow: {\n      host: \"sandbox\"\n    },\n    credentials: {\n      login: \"johndoe@mymail.sutd.edu.sg\",\n      // To replace by your developer credendials\n      password: \"IAmJohnDoes1!\" // To replace by your developer credentials\n\n    },\n    // Application identifier\n    application: {\n      appID: \"\",\n      appSecret: \"\"\n    },\n    // Logs options\n    logs: {\n      enableConsoleLogs: true,\n      enableFileLogs: false,\n      \"color\": true,\n      \"level\": 'debug',\n      \"customLabel\": \"vincent01\",\n      \"system-dev\": {\n        \"internals\": false,\n        \"http\": false\n      },\n      file: {\n        path: \"/var/tmp/rainbowsdk/\",\n        customFileName: \"R-SDK-Node-Sample2\",\n        level: \"debug\",\n        zippedArchive: false\n        /*,\r\n        maxSize : '10m',\r\n        maxFiles : 10 // */\n\n      }\n    },\n    // IM options\n    im: {\n      sendReadReceipt: true\n    }\n  };\n\n  const RainbowSDK = require('rainbow-node-sdk');\n\n  const myRainbow = new RainbowSDK(options); // Create new instance of rainbow SDK\n\n  myRainbow.start(); // start this new instance\n\n  myRainbow.events.on('rainbow_onready', function () {\n    // do something when the SDK is connected to Rainbow\n    console.log(\"SDK connected to rainbow!\");\n  }); // let RainbowSDK = require(\"rainbow-node-sdk\");\n  // let contacts = rainbowSDK.contacts.getAll();\n  // for (let elems in contacts) {\n  //     console.log(elems)\n  // }\n  // let options = {\n  //     rainbow: {\n  //         host: \"sandbox\"\n  //     },\n  //     credentials: {\n  //         login: \"johndoe@mymail.sutd.edu.sg\", // To replace by your developer credendials\n  //         password: \"IAmJohnDoes1!\" // To replace by your developer credentials\n  //     },\n  //     // Application identifier\n  //     application: {\n  //         appID: \"82246ae05a3611eabf7e77d14e87b936\",\n  //         appSecret: \"OLt1Qpu7fsCDNvT0r42waj0l4EeLe1Wb2nox0vpWGrpuqg4uunxwztDbJFAJKfwD\"\n  //     },\n  //     // Logs options\n  //     logs: {\n  //         enableConsoleLogs: false,\n  //         enableFileLogs: false,\n  //         \"color\": true,\n  //         \"level\": 'debug',\n  //         \"customLabel\": \"vincent01\",\n  //         \"system-dev\": {\n  //             \"internals\": false,\n  //             \"http\": false,\n  //         }, \n  //         file: {\n  //             path: \"/var/tmp/rainbowsdk/\",\n  //             customFileName: \"R-SDK-Node-Sample2\",\n  //             level: \"debug\",\n  //             zippedArchive : false/*,\n  //             maxSize : '10m',\n  //             maxFiles : 10 // */\n  //         }\n  //     },\n  //     // IM options\n  //     im: {\n  //         sendReadReceipt: true\n  //     }\n  // };\n  // // Instantiate the SDK\n  // let rainbowSDK = new RainbowSDK(options);\n  // // Start the SDK\n  // rainbowSDK.start();\n  // // rainbowSDK.events.on(\"rainbow_onmessagereceived\", (message) => {\n  // //     // Check if the message is not from you\n  // //     if(!message.fromJid.includes(rainbowSDK.connectedUser.jid_im)) {\n  // //         // Check that the message is from a user and not a bot\n  // //         if( message.type === \"chat\") {\n  // //             // Answer to this user\n  // //             rainbowSDK.im.sendMessageToJid(\"Hello! How may I help you? This is Spongebob\" + username + pwd, message.fromJid);\n  // //             // Do something with the message sent\n  // //             console.log(message);\n  // //         }\n  // //     }\n  // // });\n  // rainbowSDK.im.sendMessageToJid(message, contacts[0].jid_im);\n  // rainbowSDK.stop() ; \n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/KanScrubs/random/src/chat_ui/rainbow/Send.js"],"names":["send","message","options","rainbow","host","credentials","login","password","application","appID","appSecret","logs","enableConsoleLogs","enableFileLogs","file","path","customFileName","level","zippedArchive","im","sendReadReceipt","RainbowSDK","require","myRainbow","start","events","on","console","log"],"mappings":"AACA;AACA;AAEA;AACA;AACA;AAEA,SAASA,IAAT,CAAcC,OAAd,EAAsB;AAElB,MAAIC,OAAO,GAAG;AACVC,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE;AADD,KADC;AAIVC,IAAAA,WAAW,EAAE;AACTC,MAAAA,KAAK,EAAE,4BADE;AAC4B;AACrCC,MAAAA,QAAQ,EAAE,eAFD,CAEiB;;AAFjB,KAJH;AAQV;AACAC,IAAAA,WAAW,EAAE;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,SAAS,EAAE;AAFF,KATH;AAaV;AACAC,IAAAA,IAAI,EAAE;AACFC,MAAAA,iBAAiB,EAAE,IADjB;AAEFC,MAAAA,cAAc,EAAE,KAFd;AAGF,eAAS,IAHP;AAIF,eAAS,OAJP;AAKF,qBAAe,WALb;AAMF,oBAAc;AACV,qBAAa,KADH;AAEV,gBAAQ;AAFE,OANZ;AAUFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAE,sBADJ;AAEFC,QAAAA,cAAc,EAAE,oBAFd;AAGFC,QAAAA,KAAK,EAAE,OAHL;AAIFC,QAAAA,aAAa,EAAG;AAAK;;;;AAJnB;AAVJ,KAdI;AAiCV;AACAC,IAAAA,EAAE,EAAE;AACAC,MAAAA,eAAe,EAAE;AADjB;AAlCM,GAAd;;AAuCA,QAAMC,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AAEA,QAAMC,SAAS,GAAG,IAAIF,UAAJ,CAAenB,OAAf,CAAlB,CA3CkB,CA2CyB;;AAC3CqB,EAAAA,SAAS,CAACC,KAAV,GA5CkB,CA4CC;;AAEnBD,EAAAA,SAAS,CAACE,MAAV,CAAiBC,EAAjB,CAAoB,iBAApB,EAAuC,YAAW;AAC9C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH,GAHD,EA9CkB,CAmDlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH","sourcesContent":["\r\n// let express = require(\"express\");\r\n// var app = express();\r\n\r\n// app.get('/option1', (req, res)=>{\r\n//     res.sendFile(__dirname + \"/views/index.html\");\r\n// });\r\n\r\nfunction send(message){\r\n\r\n    let options = {\r\n        rainbow: {\r\n            host: \"sandbox\"\r\n        },\r\n        credentials: {\r\n            login: \"johndoe@mymail.sutd.edu.sg\", // To replace by your developer credendials\r\n            password: \"IAmJohnDoes1!\" // To replace by your developer credentials\r\n        },\r\n        // Application identifier\r\n        application: {\r\n            appID: \"\",\r\n            appSecret: \"\"\r\n        },\r\n        // Logs options\r\n        logs: {\r\n            enableConsoleLogs: true,\r\n            enableFileLogs: false,\r\n            \"color\": true,\r\n            \"level\": 'debug',\r\n            \"customLabel\": \"vincent01\",\r\n            \"system-dev\": {\r\n                \"internals\": false,\r\n                \"http\": false,\r\n            }, \r\n            file: {\r\n                path: \"/var/tmp/rainbowsdk/\",\r\n                customFileName: \"R-SDK-Node-Sample2\",\r\n                level: \"debug\",\r\n                zippedArchive : false/*,\r\n                maxSize : '10m',\r\n                maxFiles : 10 // */\r\n            }\r\n        },\r\n        // IM options\r\n        im: {\r\n            sendReadReceipt: true\r\n        }\r\n    };\r\n    \r\n    const RainbowSDK = require('rainbow-node-sdk');\r\n    \r\n    const myRainbow = new RainbowSDK(options); // Create new instance of rainbow SDK\r\n    myRainbow.start(); // start this new instance\r\n    \r\n    myRainbow.events.on('rainbow_onready', function() {\r\n        // do something when the SDK is connected to Rainbow\r\n        console.log(\"SDK connected to rainbow!\");\r\n    });\r\n    \r\n    // let RainbowSDK = require(\"rainbow-node-sdk\");\r\n    // let contacts = rainbowSDK.contacts.getAll();\r\n    // for (let elems in contacts) {\r\n    //     console.log(elems)\r\n    // }\r\n    // let options = {\r\n    //     rainbow: {\r\n    //         host: \"sandbox\"\r\n    //     },\r\n    //     credentials: {\r\n    //         login: \"johndoe@mymail.sutd.edu.sg\", // To replace by your developer credendials\r\n    //         password: \"IAmJohnDoes1!\" // To replace by your developer credentials\r\n    //     },\r\n    //     // Application identifier\r\n    //     application: {\r\n    //         appID: \"82246ae05a3611eabf7e77d14e87b936\",\r\n    //         appSecret: \"OLt1Qpu7fsCDNvT0r42waj0l4EeLe1Wb2nox0vpWGrpuqg4uunxwztDbJFAJKfwD\"\r\n    //     },\r\n    //     // Logs options\r\n    //     logs: {\r\n    //         enableConsoleLogs: false,\r\n    //         enableFileLogs: false,\r\n    //         \"color\": true,\r\n    //         \"level\": 'debug',\r\n    //         \"customLabel\": \"vincent01\",\r\n    //         \"system-dev\": {\r\n    //             \"internals\": false,\r\n    //             \"http\": false,\r\n    //         }, \r\n    //         file: {\r\n    //             path: \"/var/tmp/rainbowsdk/\",\r\n    //             customFileName: \"R-SDK-Node-Sample2\",\r\n    //             level: \"debug\",\r\n    //             zippedArchive : false/*,\r\n    //             maxSize : '10m',\r\n    //             maxFiles : 10 // */\r\n    //         }\r\n    //     },\r\n    //     // IM options\r\n    //     im: {\r\n    //         sendReadReceipt: true\r\n    //     }\r\n    // };\r\n    // // Instantiate the SDK\r\n    // let rainbowSDK = new RainbowSDK(options);\r\n\r\n    // // Start the SDK\r\n    // rainbowSDK.start();\r\n\r\n    // // rainbowSDK.events.on(\"rainbow_onmessagereceived\", (message) => {\r\n    // //     // Check if the message is not from you\r\n    // //     if(!message.fromJid.includes(rainbowSDK.connectedUser.jid_im)) {\r\n    // //         // Check that the message is from a user and not a bot\r\n    // //         if( message.type === \"chat\") {\r\n    // //             // Answer to this user\r\n    // //             rainbowSDK.im.sendMessageToJid(\"Hello! How may I help you? This is Spongebob\" + username + pwd, message.fromJid);\r\n    // //             // Do something with the message sent\r\n    // //             console.log(message);\r\n    // //         }\r\n    // //     }\r\n    // // });\r\n    // rainbowSDK.im.sendMessageToJid(message, contacts[0].jid_im);\r\n    // rainbowSDK.stop() ; \r\n}"]},"metadata":{},"sourceType":"module"}