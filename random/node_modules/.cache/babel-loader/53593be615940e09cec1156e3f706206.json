{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @class\n * @name Invitation\n * @public\n * @description\n *      This class is used to represent an invitation received or sent by/to user <br/>\n */\n\nclass Invitation {\n  constructor(id, invitedUserId, invitedUserEmail, invitingUserId, invitingUserEmail, requestNotificationLanguage, invitingDate, lastNotificationDate, status, type, inviteToJoinMeeting, invitedPhoneNumber) {\n    /**\n     * @public\n     * @property {string} id The invitation ID\n     * @readonly\n     */\n    this.id = id;\n    /**\n     * @public\n     * @property {string} invitedUserId The invited user unique Rainbow id\n     * @readonly\n     */\n\n    this.invitedUserId = invitedUserId;\n    /**\n     * @public\n     * @property {string} invitedUserEmail The invited user email\n     * @readonly\n     */\n\n    this.invitedUserEmail = invitedUserEmail;\n    /**\n     * @public\n     * @property {string} invitedPhoneNumber The invited user Phone Number\n     * @readonly\n     */\n\n    this.invitedPhoneNumber = invitedPhoneNumber;\n    /**\n     * @private\n     * @property {string} invitingUserId The inviting user unique Rainbow Id\n     * @readonly\n     */\n\n    this.invitingUserId = invitingUserId;\n    /**\n     * @private\n     * @property {string} invitingUserEmail The inviting user loginEmail\n     * @readonly\n     */\n\n    this.invitingUserEmail = invitingUserEmail; // Status\n\n    /**\n     * @private\n     * @property {string} requestNotificationLanguage The request notification language\n     * @readonly\n     */\n\n    this.requestNotificationLanguage = requestNotificationLanguage;\n    /**\n     * @public\n     * @property {string} invitingDate The date the invitation was created.\n     * @readonly\n     */\n\n    this.invitingDate = invitingDate;\n    /**\n     * @public\n     * @property {string} lastnotificationDate The date when the last email notification was sent.\n     * @readonly\n     */\n\n    this.lastNotificationDate = lastNotificationDate; //fix #24157\n\n    /**\n     * @public\n     * @property {string} status The invitation status.\n     * @readonly\n     */\n\n    this.status = status;\n    /**\n     * @public\n     * @property {string} type The invitation type.\n     * @readonly\n     */\n\n    this.type = type;\n    /**\n     * @public\n     * @property {string} defaultAvatar The invitation defaultAvatar.\n     * @readonly\n     */\n\n    this.defaultAvatar = null;\n    /**\n     * @public\n     * @property {boolean} inviteToJoinMeeting True if joinRoom invitation.\n     * @readonly\n     */\n\n    this.inviteToJoinMeeting = inviteToJoinMeeting;\n  }\n\n  createDefaultAvatar() {\n    /* if (!this.defaultAvatar && this.invitedUserEmail) {\n        var color = userInfoService.computeUserColor(this.invitedUserEmail);\n        var initials = this.invitedUserEmail.substring(0, 2).toUpperCase();\n        this.defaultAvatar = userInfoService.createDefaultAvatarImage(initials, color);\n    } // */\n  }\n\n  /*************************************************************/\n\n  /* STATIC FACTORIES                                          */\n\n  /*************************************************************/\n  static create(id, invitedUserId, invitedUserEmail, invitingUserId, invitingUserEmail, requestNotificationLanguage, invitingDate, lastNotificationDate, status, type, inviteToJoinMeeting, invitedPhoneNumber) {\n    return new Invitation(id, invitedUserId, invitedUserEmail, invitingUserId, invitingUserEmail, requestNotificationLanguage, invitingDate, lastNotificationDate, status, type, inviteToJoinMeeting, invitedPhoneNumber);\n  }\n\n  static createFromData(invitationData) {\n    let invitation = new Invitation(invitationData.id, invitationData.invitedUserId, invitationData.invitedUserEmail, invitationData.invitingUserId, invitationData.invitingUserEmail, invitationData.requestNotificationLanguage, invitationData.invitingDate, invitationData.lastNotificationDate, invitationData.status, invitationData.type, invitationData.inviteToJoinMeeting, invitationData.invitedPhoneNumber);\n    invitation.createDefaultAvatar();\n    return invitation;\n  }\n\n}\n\nexports.Invitation = Invitation;\nmodule.exports = {\n  'Invitation': Invitation\n};","map":{"version":3,"sources":["../../../src/lib/common/models/Invitation.ts"],"names":[],"mappings":"AAAA;;;;;AASA;;;;;;;;AAOA,MAAM,UAAN,CAAgB;AAeZ,EAAA,WAAA,CAAY,EAAZ,EAAgB,aAAhB,EAA+B,gBAA/B,EAAiD,cAAjD,EAAiE,iBAAjE,EAAoF,2BAApF,EAAiH,YAAjH,EACY,oBADZ,EACkC,MADlC,EAC0C,IAD1C,EACgD,mBADhD,EACqE,kBADrE,EACuF;AAEnF;;;;;AAKA,SAAK,EAAL,GAAU,EAAV;AAEA;;;;;;AAKA,SAAK,aAAL,GAAqB,aAArB;AAEA;;;;;;AAKA,SAAK,gBAAL,GAAwB,gBAAxB;AAEA;;;;;;AAKA,SAAK,kBAAL,GAA0B,kBAA1B;AAEA;;;;;;AAKA,SAAK,cAAL,GAAsB,cAAtB;AAEA;;;;;;AAKA,SAAK,iBAAL,GAAyB,iBAAzB,CA1CmF,CA4CnF;;AACA;;;;;;AAKA,SAAK,2BAAL,GAAmC,2BAAnC;AAEA;;;;;;AAKA,SAAK,YAAL,GAAoB,YAApB;AAEA;;;;;;AAKA,SAAK,oBAAL,GAA4B,oBAA5B,CAhEmF,CAgElC;;AAEjD;;;;;;AAKA,SAAK,MAAL,GAAc,MAAd;AAEA;;;;;;AAKA,SAAK,IAAL,GAAY,IAAZ;AAEA;;;;;;AAKA,SAAK,aAAL,GAAqB,IAArB;AAEA;;;;;;AAKA,SAAK,mBAAL,GAA2B,mBAA3B;AACH;;AAED,EAAA,mBAAmB,GAAA;AACf;;;;;AAKH;;AAGD;;AACA;;AAEA;AACO,SAAO,MAAP,CAAc,EAAd,EAAkB,aAAlB,EAAiC,gBAAjC,EAAmD,cAAnD,EAAmE,iBAAnE,EAAsF,2BAAtF,EAAmH,YAAnH,EAAiI,oBAAjI,EAAuJ,MAAvJ,EAA+J,IAA/J,EAAqK,mBAArK,EAA0L,kBAA1L,EAA4M;AAC/M,WAAO,IAAI,UAAJ,CAAe,EAAf,EAAmB,aAAnB,EAAkC,gBAAlC,EAAoD,cAApD,EAAoE,iBAApE,EAAuF,2BAAvF,EAAoH,YAApH,EAAkI,oBAAlI,EAAwJ,MAAxJ,EAAgK,IAAhK,EAAsK,mBAAtK,EAA2L,kBAA3L,CAAP;AACH;;AAEM,SAAO,cAAP,CAAsB,cAAtB,EAAoC;AACvC,QAAI,UAAU,GAAG,IAAI,UAAJ,CAAe,cAAc,CAAC,EAA9B,EAAkC,cAAc,CAAC,aAAjD,EAAgE,cAAc,CAAC,gBAA/E,EACb,cAAc,CAAC,cADF,EACkB,cAAc,CAAC,iBADjC,EACoD,cAAc,CAAC,2BADnE,EAEb,cAAc,CAAC,YAFF,EAEgB,cAAc,CAAC,oBAF/B,EAEqD,cAAc,CAAC,MAFpE,EAE4E,cAAc,CAAC,IAF3F,EAGb,cAAc,CAAC,mBAHF,EAGuB,cAAc,CAAC,kBAHtC,CAAjB;AAIA,IAAA,UAAU,CAAC,mBAAX;AACA,WAAO,UAAP;AACH;;AAvIW;;AA2IM,OAAA,CAAA,UAAA,GAAA,UAAA;AADtB,MAAM,CAAC,OAAP,GAAiB;AAAC,gBAAe;AAAhB,CAAjB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @class\n * @name Invitation\n * @public\n * @description\n *      This class is used to represent an invitation received or sent by/to user <br/>\n */\nclass Invitation {\n    constructor(id, invitedUserId, invitedUserEmail, invitingUserId, invitingUserEmail, requestNotificationLanguage, invitingDate, lastNotificationDate, status, type, inviteToJoinMeeting, invitedPhoneNumber) {\n        /**\n         * @public\n         * @property {string} id The invitation ID\n         * @readonly\n         */\n        this.id = id;\n        /**\n         * @public\n         * @property {string} invitedUserId The invited user unique Rainbow id\n         * @readonly\n         */\n        this.invitedUserId = invitedUserId;\n        /**\n         * @public\n         * @property {string} invitedUserEmail The invited user email\n         * @readonly\n         */\n        this.invitedUserEmail = invitedUserEmail;\n        /**\n         * @public\n         * @property {string} invitedPhoneNumber The invited user Phone Number\n         * @readonly\n         */\n        this.invitedPhoneNumber = invitedPhoneNumber;\n        /**\n         * @private\n         * @property {string} invitingUserId The inviting user unique Rainbow Id\n         * @readonly\n         */\n        this.invitingUserId = invitingUserId;\n        /**\n         * @private\n         * @property {string} invitingUserEmail The inviting user loginEmail\n         * @readonly\n         */\n        this.invitingUserEmail = invitingUserEmail;\n        // Status\n        /**\n         * @private\n         * @property {string} requestNotificationLanguage The request notification language\n         * @readonly\n         */\n        this.requestNotificationLanguage = requestNotificationLanguage;\n        /**\n         * @public\n         * @property {string} invitingDate The date the invitation was created.\n         * @readonly\n         */\n        this.invitingDate = invitingDate;\n        /**\n         * @public\n         * @property {string} lastnotificationDate The date when the last email notification was sent.\n         * @readonly\n         */\n        this.lastNotificationDate = lastNotificationDate; //fix #24157\n        /**\n         * @public\n         * @property {string} status The invitation status.\n         * @readonly\n         */\n        this.status = status;\n        /**\n         * @public\n         * @property {string} type The invitation type.\n         * @readonly\n         */\n        this.type = type;\n        /**\n         * @public\n         * @property {string} defaultAvatar The invitation defaultAvatar.\n         * @readonly\n         */\n        this.defaultAvatar = null;\n        /**\n         * @public\n         * @property {boolean} inviteToJoinMeeting True if joinRoom invitation.\n         * @readonly\n         */\n        this.inviteToJoinMeeting = inviteToJoinMeeting;\n    }\n    createDefaultAvatar() {\n        /* if (!this.defaultAvatar && this.invitedUserEmail) {\n            var color = userInfoService.computeUserColor(this.invitedUserEmail);\n            var initials = this.invitedUserEmail.substring(0, 2).toUpperCase();\n            this.defaultAvatar = userInfoService.createDefaultAvatarImage(initials, color);\n        } // */\n    }\n    ;\n    /*************************************************************/\n    /* STATIC FACTORIES                                          */\n    /*************************************************************/\n    static create(id, invitedUserId, invitedUserEmail, invitingUserId, invitingUserEmail, requestNotificationLanguage, invitingDate, lastNotificationDate, status, type, inviteToJoinMeeting, invitedPhoneNumber) {\n        return new Invitation(id, invitedUserId, invitedUserEmail, invitingUserId, invitingUserEmail, requestNotificationLanguage, invitingDate, lastNotificationDate, status, type, inviteToJoinMeeting, invitedPhoneNumber);\n    }\n    static createFromData(invitationData) {\n        let invitation = new Invitation(invitationData.id, invitationData.invitedUserId, invitationData.invitedUserEmail, invitationData.invitingUserId, invitationData.invitingUserEmail, invitationData.requestNotificationLanguage, invitationData.invitingDate, invitationData.lastNotificationDate, invitationData.status, invitationData.type, invitationData.inviteToJoinMeeting, invitationData.invitedPhoneNumber);\n        invitation.createDefaultAvatar();\n        return invitation;\n    }\n}\nexports.Invitation = Invitation;\nmodule.exports = { 'Invitation': Invitation };\n//# sourceMappingURL=Invitation.js.map"]},"metadata":{},"sourceType":"script"}