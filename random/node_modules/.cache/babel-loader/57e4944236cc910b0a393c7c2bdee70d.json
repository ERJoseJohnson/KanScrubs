{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @enum\n * @name DataStoreType\n * @description\n *  used in SDK parameter \"messagesDataStore\": DataStoreType.NoStore, Parameter to override the storeMessages parameter of the SDK to define the behaviour of the storage of the messages (Enum DataStoreType in lib/config/config , default value \"DataStoreType.UsestoreMessagesField\" so it follows the storeMessages behaviour)\n *                          DataStoreType.NoStore Tell the server to NOT store the messages for delay distribution or for history of the bot and the contact.\n *                          DataStoreType.NoPermanentStore Tell the server to NOT store the messages for history of the bot and the contact. But being stored temporarily as a normal part of delivery (e.g. if the recipient is offline at the time of sending).\n *                          DataStoreType.StoreTwinSide The messages are fully stored.\n *                          DataStoreType.UsestoreMessagesField to follow the storeMessages SDK's parameter behaviour.\n */\n\nvar DataStoreType;\n\n(function (DataStoreType) {\n  DataStoreType[\"NoStore\"] = \"no-store\";\n  DataStoreType[\"NoPermanentStore\"] = \"no-permanent-store\";\n  DataStoreType[\"StoreTwinSide\"] = \"storetwinside\";\n  DataStoreType[\"UsestoreMessagesField\"] = \"OldstoreMessagesUsed\";\n})(DataStoreType || (DataStoreType = {}));\n\nexports.DataStoreType = DataStoreType; // Desactivated option because it is a preference one, so it impacted every ressources.\n// DataStoreType.NoStoreBotSide The messages are not stored on  loggued-in Bot's history, but are stored on the other side. So the contact kept the messages exchanged with bot in his history.\n// NoStoreBotSide = \"nostorebotside\",\n\nlet conf = {\n  sandbox: {\n    http: {\n      host: \"sandbox.openrainbow.com\",\n      port: \"443\",\n      protocol: \"https\"\n    },\n    xmpp: {\n      host: \"sandbox.openrainbow.com\",\n      port: \"443\",\n      protocol: \"wss\",\n      timeBetweenXmppRequests: \"20\"\n    },\n    s2s: {\n      hostCallback: \"nrock\",\n      locallistenningport: \"4000\"\n    }\n  },\n  official: {\n    http: {\n      host: \"openrainbow.com\",\n      port: \"443\",\n      protocol: \"https\"\n    },\n    xmpp: {\n      host: \"openrainbow.com\",\n      port: \"443\",\n      protocol: \"wss\",\n      timeBetweenXmppRequests: \"20\"\n    },\n    s2s: {\n      hostCallback: \"nrock\",\n      locallistenningport: \"4000\"\n    }\n  },\n  any: {\n    http: {\n      host: \"\",\n      port: \"443\",\n      protocol: \"https\"\n    },\n    xmpp: {\n      host: \"\",\n      port: \"443\",\n      protocol: \"wss\",\n      timeBetweenXmppRequests: \"20\"\n    },\n    s2s: {\n      hostCallback: \"nrock\",\n      locallistenningport: \"4000\"\n    }\n  },\n  logs: {\n    path: \"/var/tmp/rainbowsdk/\",\n    level: \"info\",\n    color: false,\n    enableConsoleLog: true,\n    \"system-dev\": {\n      internals: false,\n      http: false\n    },\n    zippedArchive: true,\n    maxSize: \"10m\",\n    maxFiles: null\n  },\n  im: {\n    sendReadReceipt: true,\n    messageMaxLength: 1024,\n    sendMessageToConnectedUser: false,\n    conversationsRetrievedFormat: \"small\",\n    storeMessages: true,\n\n    /* copyMessage: true, /* https://xmpp.org/extensions/xep-0334.html#hints :\n    No copies :\n        Messages with the <no-copy/> hint should not be copied to addresses other than the one to which it is addressed, for example through Message Carbons (XEP-0280) [3].\n        This hint MUST only be included on messages addressed to full JIDs and explicitly does not override the behaviour defined in XMPP IM [1] for handling messages to bare JIDs,\n        which may involve copying to multiple resources, or multiple occupants in a Multi-User Chat (XEP-0045) [6] room.\n    // */\n    copyMessage: false,\n    nbMaxConversations: 15,\n    rateLimitPerHour: 1000,\n    messagesDataStore: DataStoreType.UsestoreMessagesField\n  },\n  mode: \"xmpp\",\n  debug: true,\n  permitSearchFromPhoneBook: true,\n  displayOrder: \"firstLast\",\n  testOutdatedVersion: true,\n  servicesToStart: {\n    presence: {\n      start_up: true,\n      optional: false\n    },\n    contacts: {\n      start_up: true,\n      optional: false\n    },\n    conversations: {\n      start_up: true,\n      optional: false\n    },\n    im: {\n      start_up: true,\n      optional: false\n    },\n    profiles: {\n      start_up: true,\n      optional: false\n    },\n    groups: {\n      start_up: true,\n      optional: false\n    },\n    bubbles: {\n      start_up: true,\n      optional: true\n    },\n    telephony: {\n      start_up: true,\n      optional: true\n    },\n    channels: {\n      start_up: true,\n      optional: true\n    },\n    admin: {\n      start_up: true,\n      optional: true\n    },\n    fileServer: {\n      start_up: true,\n      optional: true\n    },\n    fileStorage: {\n      start_up: true,\n      optional: true\n    },\n    calllog: {\n      start_up: true,\n      optional: true\n    },\n    favorites: {\n      start_up: true,\n      optional: true\n    },\n    invitation: {\n      start_up: true,\n      optional: true\n    },\n    settings: {\n      start_up: true,\n      optional: true\n    } //need services : ( XMPPService, _rest : RESTService)\n\n  }\n};\nexports.config = conf;\nmodule.exports.config = conf;\nmodule.exports.DataStoreType = DataStoreType;","map":{"version":3,"sources":["../../src/lib/config/config.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @enum\n * @name DataStoreType\n * @description\n *  used in SDK parameter \"messagesDataStore\": DataStoreType.NoStore, Parameter to override the storeMessages parameter of the SDK to define the behaviour of the storage of the messages (Enum DataStoreType in lib/config/config , default value \"DataStoreType.UsestoreMessagesField\" so it follows the storeMessages behaviour)\n *                          DataStoreType.NoStore Tell the server to NOT store the messages for delay distribution or for history of the bot and the contact.\n *                          DataStoreType.NoPermanentStore Tell the server to NOT store the messages for history of the bot and the contact. But being stored temporarily as a normal part of delivery (e.g. if the recipient is offline at the time of sending).\n *                          DataStoreType.StoreTwinSide The messages are fully stored.\n *                          DataStoreType.UsestoreMessagesField to follow the storeMessages SDK's parameter behaviour.\n */\nvar DataStoreType;\n(function (DataStoreType) {\n    DataStoreType[\"NoStore\"] = \"no-store\";\n    DataStoreType[\"NoPermanentStore\"] = \"no-permanent-store\";\n    DataStoreType[\"StoreTwinSide\"] = \"storetwinside\";\n    DataStoreType[\"UsestoreMessagesField\"] = \"OldstoreMessagesUsed\";\n})(DataStoreType || (DataStoreType = {}));\nexports.DataStoreType = DataStoreType;\n// Desactivated option because it is a preference one, so it impacted every ressources.\n// DataStoreType.NoStoreBotSide The messages are not stored on  loggued-in Bot's history, but are stored on the other side. So the contact kept the messages exchanged with bot in his history.\n// NoStoreBotSide = \"nostorebotside\",\nlet conf = {\n    sandbox: {\n        http: {\n            host: \"sandbox.openrainbow.com\",\n            port: \"443\",\n            protocol: \"https\"\n        },\n        xmpp: {\n            host: \"sandbox.openrainbow.com\",\n            port: \"443\",\n            protocol: \"wss\",\n            timeBetweenXmppRequests: \"20\"\n        },\n        s2s: {\n            hostCallback: \"nrock\",\n            locallistenningport: \"4000\"\n        }\n    },\n    official: {\n        http: {\n            host: \"openrainbow.com\",\n            port: \"443\",\n            protocol: \"https\"\n        },\n        xmpp: {\n            host: \"openrainbow.com\",\n            port: \"443\",\n            protocol: \"wss\",\n            timeBetweenXmppRequests: \"20\"\n        },\n        s2s: {\n            hostCallback: \"nrock\",\n            locallistenningport: \"4000\"\n        }\n    },\n    any: {\n        http: {\n            host: \"\",\n            port: \"443\",\n            protocol: \"https\"\n        },\n        xmpp: {\n            host: \"\",\n            port: \"443\",\n            protocol: \"wss\",\n            timeBetweenXmppRequests: \"20\"\n        },\n        s2s: {\n            hostCallback: \"nrock\",\n            locallistenningport: \"4000\"\n        }\n    },\n    logs: {\n        path: \"/var/tmp/rainbowsdk/\",\n        level: \"info\",\n        color: false,\n        enableConsoleLog: true,\n        \"system-dev\": {\n            internals: false,\n            http: false\n        },\n        zippedArchive: true,\n        maxSize: \"10m\",\n        maxFiles: null\n    },\n    im: {\n        sendReadReceipt: true,\n        messageMaxLength: 1024,\n        sendMessageToConnectedUser: false,\n        conversationsRetrievedFormat: \"small\",\n        storeMessages: true,\n        /* copyMessage: true, /* https://xmpp.org/extensions/xep-0334.html#hints :\n        No copies :\n            Messages with the <no-copy/> hint should not be copied to addresses other than the one to which it is addressed, for example through Message Carbons (XEP-0280) [3].\n            This hint MUST only be included on messages addressed to full JIDs and explicitly does not override the behaviour defined in XMPP IM [1] for handling messages to bare JIDs,\n            which may involve copying to multiple resources, or multiple occupants in a Multi-User Chat (XEP-0045) [6] room.\n        // */\n        copyMessage: false,\n        nbMaxConversations: 15,\n        rateLimitPerHour: 1000,\n        messagesDataStore: DataStoreType.UsestoreMessagesField,\n    },\n    mode: \"xmpp\",\n    debug: true,\n    permitSearchFromPhoneBook: true,\n    displayOrder: \"firstLast\",\n    testOutdatedVersion: true,\n    servicesToStart: {\n        presence: {\n            start_up: true,\n            optional: false\n        },\n        contacts: {\n            start_up: true,\n            optional: false\n        },\n        conversations: {\n            start_up: true,\n            optional: false\n        },\n        im: {\n            start_up: true,\n            optional: false\n        },\n        profiles: {\n            start_up: true,\n            optional: false\n        },\n        groups: {\n            start_up: true,\n            optional: false\n        },\n        bubbles: {\n            start_up: true,\n            optional: true\n        },\n        telephony: {\n            start_up: true,\n            optional: true\n        },\n        channels: {\n            start_up: true,\n            optional: true\n        },\n        admin: {\n            start_up: true,\n            optional: true\n        },\n        fileServer: {\n            start_up: true,\n            optional: true\n        },\n        fileStorage: {\n            start_up: true,\n            optional: true\n        },\n        calllog: {\n            start_up: true,\n            optional: true\n        },\n        favorites: {\n            start_up: true,\n            optional: true\n        },\n        invitation: {\n            start_up: true,\n            optional: true\n        },\n        settings: {\n            start_up: true,\n            optional: true\n        } //need services : ( XMPPService, _rest : RESTService)\n    }\n};\nexports.config = conf;\nmodule.exports.config = conf;\nmodule.exports.DataStoreType = DataStoreType;\n//# sourceMappingURL=config.js.map"]},"metadata":{},"sourceType":"script"}