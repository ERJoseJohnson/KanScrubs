{"ast":null,"code":"/*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true eqeqeq:true immed:true latedef:true*/\n//\n// FormData\n//\n// http://hacks.mozilla.org/2010/05/formdata-interface-coming-to-firefox/\n//\n(function () {\n  \"use strict\";\n\n  require('remedial');\n\n  require('bufferjs');\n\n  var EventEmitter = require('events').EventEmitter,\n      forEachAsync = require('foreachasync').forEachAsync,\n      File = require('File'),\n      FileReader = require('filereader');\n\n  function isFile(o) {\n    return o instanceof File || o.name && (o.path || o.stream || o.buffer);\n  }\n\n  function FormData() {\n    var self = this,\n        first = true,\n        fields = {};\n    self.nodeChunkedEncoding = false;\n\n    self.setNodeChunkedEncoding = function (val) {\n      self.nodeChunkedEncoding = val;\n    };\n\n    self.getContentType = function () {\n      return self.type;\n    };\n\n    self.append = function (key, val) {\n      var field = fields[key] = fields[key] || [],\n          err;\n\n      if (field.length > 0 && '[]' !== key.substr(key.length - 2)) {\n        err = new Error(\"Overwriting '\" + key + \"'. Use '\" + key + \"[] if you intend this to be treated as an array' \");\n        console.log(err.message);\n        field.pop();\n      }\n\n      field.push(val);\n      return err;\n    };\n\n    function toJSON() {\n      /*\r\n        files.forEach(function (file) {\r\n          var fr = new FileReader();\r\n          fr.addEventListener('load', join.deliverer());\r\n          fr.readAsText('base64');\r\n        });\r\n      */\n    }\n\n    function toContentDisposition(key, val) {\n      var emitter = new EventEmitter(),\n          text = '',\n          fr;\n\n      if (first) {\n        first = false;\n      } else {\n        text += '\\r\\n';\n      }\n\n      text += '--' + self.boundary;\n      text += \"\\r\\nContent-Disposition: form-data; name=\" + key.quote();\n\n      if (!isFile(val)) {\n        if ('string' !== typeof val) {\n          val = JSON.stringify(val);\n        }\n\n        process.nextTick(function () {\n          emitter.emit('data', new Buffer(text + \"\\r\\n\\r\\n\" + val));\n          emitter.emit('end');\n        });\n      } else {\n        fr = new FileReader();\n        fr.on('loadstart', function () {\n          text += '; filename=\"' + val.name + '\"';\n          text += \"\\r\\nContent-Type: \" + (val.type || 'application/binary') + \"\\r\\n\\r\\n\";\n          emitter.emit('data', new Buffer(text));\n        });\n        fr.on('data', function (data) {\n          emitter.emit('data', data);\n        });\n        fr.on('loadend', function () {\n          emitter.emit('end');\n        });\n        fr.setNodeChunkedEncoding(self.nodeChunkedEncoding);\n        fr.readAsArrayBuffer(val);\n      }\n\n      return emitter;\n    }\n\n    function toFormData() {\n      var emitter = new EventEmitter(),\n          buffers = [];\n      emitter.on('data', function (data) {\n        buffers.push(data);\n      });\n      forEachAsync(Object.keys(fields), function (next, key) {\n        forEachAsync(fields[key], function (next2, item) {\n          var stream = toContentDisposition(key, item);\n          stream.on('data', function (data) {\n            emitter.emit('data', data);\n          });\n          stream.on('end', next2);\n        }).then(next);\n      }).then(function () {\n        var footer = new Buffer(\"\\r\\n--\" + self.boundary + \"--\\r\\n\");\n        emitter.emit('data', footer);\n        emitter.emit('ready');\n      });\n      emitter.on('ready', function () {\n        var data = Buffer.concat(buffers); // TODO\n        // determine the size as quickly as possible\n        // so that the data can still be streamed, even\n        // if the content-length must be known\n        //\n        // This will only take a significant amount of time\n        // if one of the `File`s is stream-backed. Waiting\n        // for the stream's `end` will hold-up the content-length\n        // calculation.\n\n        emitter.emit('size', data.length);\n        emitter.emit('load', data);\n        emitter.emit('end');\n      });\n      return emitter;\n    }\n\n    function toFormUrlEncoded() {}\n\n    function randomString(len, charset) {\n      var numbers = \"0123456789\",\n          ualpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n          lalpha = \"abcdefghijklmnopqrstuvwxyz\",\n          special = \"+/-_:\",\n          radix = {\n        base16: numbers + ualpha.substr(0, 6),\n        base36: numbers + ualpha,\n        base64: ualpha + lalpha + numbers + special.substr(0, 2),\n        base64url: ualpha + lalpha + numbers + special.substr(2, 2),\n        base64xml: ualpha + lalpha + numbers + special.substr(3, 2)\n      },\n          result = '',\n          chars,\n          length,\n          seed,\n          i;\n      length = len || 8;\n      chars = radix[charset] || charset || radix.base64url;\n\n      for (i = 0; i < length; i += 1) {\n        seed = Math.floor(Math.random() * chars.length);\n        result += chars.substring(seed, seed + 1);\n      }\n\n      return result;\n    }\n\n    self.serialize = function (intendedType) {\n      self.type = intendedType = (intendedType || '').toLowerCase();\n\n      if ('multipart/form-data' !== self.type) {\n        Object.keys(fields).forEach(function (key) {\n          // TODO traverse entire tree\n          fields[key].forEach(function (item) {\n            if (isFile(item)) {\n              self.type = 'multipart/form-data';\n            }\n          });\n        });\n\n        if ('multipart/form-data' === self.type) {\n          console.log(\"ContentType changed `multipart/form-data`: Some of the upload items are `HTML5::FileAPI::File`s.\");\n        } // This is how FireFox does it. Seems good enough to me.\n        // Note that the spec also allows a space in the middle, but not at the end\n        // http://www.w3.org/Protocols/rfc1341/7_2_Multipart.html\n        //self.boundary = \"---------------------------5414130496409022042012852923\";\n\n\n        self.boundary = '---------------------------' + randomString(28, 'base64url', \"'()+_,-./:=?\");\n        self.type += '; boundary=' + self.boundary;\n        return toFormData();\n      }\n\n      if (!self.type || 'application/x-www-form-urlencoded' === self.type.toLowerCase()) {\n        self.type = 'application/x-www-form-urlencoded';\n        return toFormUrlEncoded();\n      }\n\n      if ('application/json' === self.type.toLowerCase()) {\n        return toJSON();\n      }\n    };\n  }\n\n  module.exports = FormData;\n})();","map":{"version":3,"sources":["C:/Users/Jose Johnson/Desktop/KanScrubs/random/node_modules/formdata/FormData.js"],"names":["require","EventEmitter","forEachAsync","File","FileReader","isFile","o","name","path","stream","buffer","FormData","self","first","fields","nodeChunkedEncoding","setNodeChunkedEncoding","val","getContentType","type","append","key","field","err","length","substr","Error","console","log","message","pop","push","toJSON","toContentDisposition","emitter","text","fr","boundary","quote","JSON","stringify","process","nextTick","emit","Buffer","on","data","readAsArrayBuffer","toFormData","buffers","Object","keys","next","next2","item","then","footer","concat","toFormUrlEncoded","randomString","len","charset","numbers","ualpha","lalpha","special","radix","base16","base36","base64","base64url","base64xml","result","chars","seed","i","Math","floor","random","substring","serialize","intendedType","toLowerCase","forEach","module","exports"],"mappings":"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","sourcesContent":["/*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true eqeqeq:true immed:true latedef:true*/\r\n//\r\n// FormData\r\n//\r\n// http://hacks.mozilla.org/2010/05/formdata-interface-coming-to-firefox/\r\n//\r\n(function () {\r\n  \"use strict\";\r\n\r\n  require('remedial');\r\n  require('bufferjs');\r\n\r\n  var EventEmitter = require('events').EventEmitter\r\n    , forEachAsync = require('foreachasync').forEachAsync\r\n    , File = require('File')\r\n    , FileReader = require('filereader')\r\n    ;\r\n\r\n  function isFile(o) {\r\n    return (o instanceof File) ||\r\n      (o.name && (o.path || o.stream || o.buffer));\r\n  }\r\n\r\n  function FormData() {\r\n    var self = this\r\n      , first = true\r\n      , fields = {}\r\n      ;\r\n\r\n    self.nodeChunkedEncoding = false;\r\n\r\n    self.setNodeChunkedEncoding = function (val) {\r\n      self.nodeChunkedEncoding = val;\r\n    };\r\n\r\n    self.getContentType = function () {\r\n      return self.type;\r\n    };\r\n\r\n    self.append = function (key, val) {\r\n      var field = fields[key] = fields[key] || [],\r\n        err;\r\n      \r\n      if (field.length > 0 && '[]' !== key.substr(key.length - 2)) {\r\n        err = new Error(\"Overwriting '\" + key + \"'. Use '\" + key  + \"[] if you intend this to be treated as an array' \");\r\n        console.log(err.message);\r\n        field.pop();\r\n      }\r\n\r\n      field.push(val);\r\n      return err;\r\n    };\r\n\r\n    function toJSON() {\r\n      /*\r\n        files.forEach(function (file) {\r\n          var fr = new FileReader();\r\n          fr.addEventListener('load', join.deliverer());\r\n          fr.readAsText('base64');\r\n        });\r\n      */\r\n    }\r\n\r\n    function toContentDisposition(key, val) {\r\n      var emitter = new EventEmitter(),\r\n        text = '',\r\n        fr;\r\n\r\n      if (first) {\r\n        first = false;\r\n      } else {\r\n        text += '\\r\\n';\r\n      }\r\n      text += '--' + self.boundary;\r\n      text += \"\\r\\nContent-Disposition: form-data; name=\" + key.quote();\r\n\r\n      if (!isFile(val)) {\r\n        if ('string' !== typeof val) {\r\n          val = JSON.stringify(val);\r\n        }\r\n        process.nextTick(function () {\r\n          emitter.emit('data', new Buffer(text + \"\\r\\n\\r\\n\" + val));\r\n          emitter.emit('end');\r\n        });\r\n      } else {\r\n        fr = new FileReader();\r\n        fr.on('loadstart', function () {\r\n          text += '; filename=\"' + val.name + '\"';\r\n          text += \"\\r\\nContent-Type: \" + (val.type || 'application/binary') + \"\\r\\n\\r\\n\";\r\n          emitter.emit('data', new Buffer(text));\r\n        });\r\n        fr.on('data', function (data) {\r\n          emitter.emit('data', data);\r\n        });\r\n        fr.on('loadend', function () {\r\n          emitter.emit('end');\r\n        });\r\n        fr.setNodeChunkedEncoding(self.nodeChunkedEncoding);\r\n        fr.readAsArrayBuffer(val);\r\n      }\r\n      return emitter;\r\n    }\r\n\r\n    function toFormData() {\r\n      var emitter = new EventEmitter(),\r\n        buffers = [];\r\n\r\n      emitter.on('data', function (data) {\r\n        buffers.push(data);\r\n      });\r\n\r\n      forEachAsync(Object.keys(fields), function (next, key) {\r\n        forEachAsync(fields[key], function (next2, item) {\r\n          var stream = toContentDisposition(key, item);\r\n          stream.on('data', function (data) {\r\n            emitter.emit('data', data);\r\n          });\r\n          stream.on('end', next2);\r\n        })\r\n        .then(next);\r\n      })\r\n      .then(function () {\r\n        var footer = new Buffer(\"\\r\\n--\" + self.boundary + \"--\\r\\n\");\r\n        emitter.emit('data', footer);\r\n        emitter.emit('ready');\r\n      });\r\n\r\n      emitter.on('ready', function () {\r\n        var data = Buffer.concat(buffers);\r\n        // TODO\r\n        // determine the size as quickly as possible\r\n        // so that the data can still be streamed, even\r\n        // if the content-length must be known\r\n        //\r\n        // This will only take a significant amount of time\r\n        // if one of the `File`s is stream-backed. Waiting\r\n        // for the stream's `end` will hold-up the content-length\r\n        // calculation.\r\n        emitter.emit('size', data.length);\r\n        emitter.emit('load', data);\r\n        emitter.emit('end');\r\n      });\r\n\r\n      return emitter;\r\n    }\r\n\r\n    function toFormUrlEncoded() {\r\n    }\r\n\r\n    function randomString(len, charset) {\r\n      var numbers = \"0123456789\",\r\n        ualpha = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\r\n        lalpha = \"abcdefghijklmnopqrstuvwxyz\",\r\n        special = \"+/-_:\",\r\n        radix = {\r\n          base16: numbers + ualpha.substr(0, 6),\r\n          base36: numbers + ualpha,\r\n          base64: ualpha + lalpha + numbers + special.substr(0,2),\r\n          base64url: ualpha + lalpha + numbers + special.substr(2,2),\r\n          base64xml: ualpha + lalpha + numbers + special.substr(3,2)\r\n        },\r\n        result = '',\r\n        chars,\r\n        length,\r\n        seed,\r\n        i;\r\n\r\n      length = len || 8;\r\n      chars = radix[charset] || charset || radix.base64url;\r\n\r\n      for (i = 0; i < length; i +=1) {\r\n        seed = Math.floor(Math.random() * chars.length);\r\n        result += chars.substring(seed, seed + 1);\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n\r\n    self.serialize = function (intendedType) {\r\n      self.type = intendedType = (intendedType || '').toLowerCase();\r\n\r\n      if ('multipart/form-data' !== self.type) {\r\n        Object.keys(fields).forEach(function (key) {\r\n          // TODO traverse entire tree\r\n          fields[key].forEach(function (item) {\r\n            if (isFile(item)) {\r\n              self.type = 'multipart/form-data';\r\n            }\r\n          });\r\n        });\r\n\r\n        if ('multipart/form-data' === self.type) {\r\n          console.log(\"ContentType changed `multipart/form-data`: Some of the upload items are `HTML5::FileAPI::File`s.\");\r\n        }\r\n\r\n\r\n        // This is how FireFox does it. Seems good enough to me.\r\n        // Note that the spec also allows a space in the middle, but not at the end\r\n        // http://www.w3.org/Protocols/rfc1341/7_2_Multipart.html\r\n        //self.boundary = \"---------------------------5414130496409022042012852923\";\r\n        self.boundary = '---------------------------' + randomString(28, 'base64url', \"'()+_,-./:=?\");\r\n        self.type += '; boundary=' + self.boundary;\r\n\r\n        return toFormData();\r\n      }\r\n\r\n      if (!self.type || 'application/x-www-form-urlencoded' === self.type.toLowerCase()) {\r\n        self.type = 'application/x-www-form-urlencoded';\r\n        return toFormUrlEncoded();\r\n      }\r\n\r\n      if ('application/json' === self.type.toLowerCase()) {\r\n        return toJSON();\r\n      }\r\n    };\r\n  }\r\n\r\n  module.exports = FormData;\r\n}());\r\n"]},"metadata":{},"sourceType":"script"}