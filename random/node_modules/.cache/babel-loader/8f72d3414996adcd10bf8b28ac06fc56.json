{"ast":null,"code":"'use strict';\n\nconst TimeoutError = require('./TimeoutError'); // eslint-disable-next-line default-param-last\n\n\nmodule.exports = function promise(EE, event, rejectEvent = 'error', timeout) {\n  return new Promise((resolve, reject) => {\n    let timeoutId;\n\n    const cleanup = () => {\n      clearTimeout(timeoutId);\n      EE.removeListener(event, onEvent);\n      EE.removeListener(rejectEvent, onError);\n    };\n\n    function onError(reason) {\n      reject(reason);\n      cleanup();\n    }\n\n    function onEvent(value) {\n      resolve(value);\n      cleanup();\n    }\n\n    EE.once(event, onEvent);\n\n    if (rejectEvent) {\n      EE.once(rejectEvent, onError);\n    }\n\n    if (timeout) {\n      timeoutId = setTimeout(() => {\n        cleanup();\n        reject(new TimeoutError());\n      }, timeout);\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Jose Johnson/Desktop/KanScrubs/random/node_modules/@xmpp/events/lib/promise.js"],"names":["TimeoutError","require","module","exports","promise","EE","event","rejectEvent","timeout","Promise","resolve","reject","timeoutId","cleanup","clearTimeout","removeListener","onEvent","onError","reason","value","once","setTimeout"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA5B,C,CAEA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,EAAjB,EAAqBC,KAArB,EAA4BC,WAAW,GAAG,OAA1C,EAAmDC,OAAnD,EAA4D;AAC3E,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAIC,SAAJ;;AAEA,UAAMC,OAAO,GAAG,MAAM;AACpBC,MAAAA,YAAY,CAACF,SAAD,CAAZ;AACAP,MAAAA,EAAE,CAACU,cAAH,CAAkBT,KAAlB,EAAyBU,OAAzB;AACAX,MAAAA,EAAE,CAACU,cAAH,CAAkBR,WAAlB,EAA+BU,OAA/B;AACD,KAJD;;AAMA,aAASA,OAAT,CAAiBC,MAAjB,EAAyB;AACvBP,MAAAA,MAAM,CAACO,MAAD,CAAN;AACAL,MAAAA,OAAO;AACR;;AAED,aAASG,OAAT,CAAiBG,KAAjB,EAAwB;AACtBT,MAAAA,OAAO,CAACS,KAAD,CAAP;AACAN,MAAAA,OAAO;AACR;;AAEDR,IAAAA,EAAE,CAACe,IAAH,CAAQd,KAAR,EAAeU,OAAf;;AACA,QAAIT,WAAJ,EAAiB;AACfF,MAAAA,EAAE,CAACe,IAAH,CAAQb,WAAR,EAAqBU,OAArB;AACD;;AAED,QAAIT,OAAJ,EAAa;AACXI,MAAAA,SAAS,GAAGS,UAAU,CAAC,MAAM;AAC3BR,QAAAA,OAAO;AACPF,QAAAA,MAAM,CAAC,IAAIX,YAAJ,EAAD,CAAN;AACD,OAHqB,EAGnBQ,OAHmB,CAAtB;AAID;AACF,GA9BM,CAAP;AA+BD,CAhCD","sourcesContent":["'use strict'\r\n\r\nconst TimeoutError = require('./TimeoutError')\r\n\r\n// eslint-disable-next-line default-param-last\r\nmodule.exports = function promise(EE, event, rejectEvent = 'error', timeout) {\r\n  return new Promise((resolve, reject) => {\r\n    let timeoutId\r\n\r\n    const cleanup = () => {\r\n      clearTimeout(timeoutId)\r\n      EE.removeListener(event, onEvent)\r\n      EE.removeListener(rejectEvent, onError)\r\n    }\r\n\r\n    function onError(reason) {\r\n      reject(reason)\r\n      cleanup()\r\n    }\r\n\r\n    function onEvent(value) {\r\n      resolve(value)\r\n      cleanup()\r\n    }\r\n\r\n    EE.once(event, onEvent)\r\n    if (rejectEvent) {\r\n      EE.once(rejectEvent, onError)\r\n    }\r\n\r\n    if (timeout) {\r\n      timeoutId = setTimeout(() => {\r\n        cleanup()\r\n        reject(new TimeoutError())\r\n      }, timeout)\r\n    }\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"script"}