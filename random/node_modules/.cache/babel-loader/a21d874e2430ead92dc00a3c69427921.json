{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\KanScrubs2\\\\random\\\\src\\\\chat_ui\\\\Chatbox.js\";\nimport React from \"react\";\nimport ChatHistory from \"./ChatHistory\";\nimport FormInp from \"./FormInp\";\nimport \"./chat.css\";\nimport send from \"./rainbow/Send\";\nimport axios from \"axios\";\nvar outgoingMessage;\nvar incomingMessage = '';\nvar prevIncomingMessage = '';\n\nclass Chatbox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.msgEnd = React.createRef();\n    this.state = {\n      companyName: 1,\n      stored_value: \"Your Message will appear hear\",\n      history: this.props.history\n    };\n\n    this.updateHistory = event => {\n      event.preventDefault();\n      var new_history = this.state.history; // Just created a file bound variable to use with the getData() method\n\n      outgoingMessage = event.target[0].value;\n      new_history.push({\n        user: \"customer1\",\n        message: outgoingMessage\n      });\n      super.setState({\n        history: new_history\n      });\n      this.setState({\n        companyName: 0\n      }); // Sedning new message as POST request to server\n      // postData(outgoingMessage);\n      //send(event.target[0].value) ; \n      // try {\n      //     const response = axios.post('http://localhost:8080/customerMessage', { incomingMessage: 'Hi there' });\n      //     console.log('ðŸ‘‰ Returned data:', response);\n      // } catch (e) {\n      //     console.log(`ðŸ˜± Axios request failed: ${e}`);\n      // }\n      //http://localhost:8080/customerMessage\n\n      axios.post('http://10.12.84.5:8080/customerMessage', {\n        incomingMessage: outgoingMessage\n      }).then(response => {\n        console.log(response);\n      }, error => {\n        console.log(error);\n      }); // send a post request \n      // axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\n      //     .then((response) => {\n      //         console.log(response);\n      //     })\n    };\n\n    this.receiveMessage = async () => {\n      axios.get('http://10.12.84.5:8080/adminResponse', {\n        success: \"Received admin message\"\n      }).then(response => {\n        //if (incomingMessage != response.adminResponse) {\n        console.log(response.data);\n        console.log(\"this is the response from server\", response.data.adminResponse);\n        var new_history = this.state.history; // Just created a file bound variable to use with the getData() method\n\n        incomingMessage = response.data.adminResponse;\n        console.log(\"This is the incoming\", incomingMessage);\n        console.log(\"This is the previous one\", prevIncomingMessage);\n\n        if (incomingMessage != prevIncomingMessage && incomingMessage != null) {\n          prevIncomingMessage = response.data.adminResponse;\n          console.log(\"in the receiveMessage part\");\n          this.updateAdminMessages();\n        }\n\n        this.render();\n      }); //console.log(response);\n      //console.log(\"klsdfjaslkdfjslad\");\n      // if (prevIncomingMessage !== incomingMessage) {\n      //     prevIncomingMessage = response.adminResponse;\n      //     new_history.push({ user: \"admin\", message: incomingMessage });\n      //     super.setState({ history: new_history });\n      // }\n    };\n\n    this.updateAdminMessages = () => {\n      var new_history = this.state.history;\n      new_history.push({\n        user: \"admin\",\n        message: incomingMessage\n      });\n      super.setState({\n        history: new_history\n      });\n      console.log(\"Updated admind messages\");\n    };\n  }\n\n  render() {\n    this.receiveMessage();\n    console.log(\"rendering......\");\n    return React.createElement(\"div\", {\n      className: \"par\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatBox pb2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"head1 pb1 pa4 tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"ALCATEL\"), React.createElement(\"div\", {\n      className: \"chatHis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(ChatHistory, {\n      history: this.state.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(FormInp, {\n      onSubmit: this.updateHistory,\n      history: this.state.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })));\n  }\n\n} // receiveMessage = () => {\n//     axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\n//         .then((response) => {\n//             //if (incomingMessage != response.adminResponse) {\n//             console.log(response.adminResponse);\n//             var new_history = this.state.history;\n//             // Just created a file bound variable to use with the getData() method\n//             incomingMessage = response.adminResponse;\n//         })\n//     console.log(response);\n//     //console.log(\"klsdfjaslkdfjslad\");\n//     // if (prevIncomingMessage !== incomingMessage) {\n//     //     prevIncomingMessage = response.adminResponse;\n//     //     new_history.push({ user: \"admin\", message: incomingMessage });\n//     //     super.setState({ history: new_history });\n//     // }\n// }\n// updateAdminMessages = () => {\n//     prevIncomingMessage = response.adminResponse;\n//     new_history.push({ user: \"admin\", message: incomingMessage });\n//     super.setState({ history: new_history });\n//     console.log(\"Updated admind messages\");\n// }\n\n\nexport default Chatbox;\n{\n  /* <div className=\"ba bw2 pa2 bg-light-yellow br4\" >\r\n  \n  <div className=\"chatbox\"><ChatHistory history={this.state.history} /></div>\r\n  <FormInp onSubmit={this.updateHistory} history={this.state.history} />\r\n  \n  </div> */\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/KanScrubs2/random/src/chat_ui/Chatbox.js"],"names":["React","ChatHistory","FormInp","send","axios","outgoingMessage","incomingMessage","prevIncomingMessage","Chatbox","Component","msgEnd","createRef","state","companyName","stored_value","history","props","updateHistory","event","preventDefault","new_history","target","value","push","user","message","setState","post","then","response","console","log","error","receiveMessage","get","success","data","adminResponse","updateAdminMessages","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ChatHistory from \"./ChatHistory\";\r\nimport FormInp from \"./FormInp\";\r\nimport \"./chat.css\" ; \r\nimport send from \"./rainbow/Send\";\r\nimport axios from \"axios\";\r\n\r\nvar outgoingMessage;\r\nvar incomingMessage = '';\r\nvar prevIncomingMessage = '';\r\n\r\n\r\n\r\nclass Chatbox extends React.Component {\r\n    //constructor() {\r\n\r\n    msgEnd = React.createRef();\r\n    state = {\r\n        companyName: 1,\r\n        stored_value: \"Your Message will appear hear\",\r\n        history: this.props.history,\r\n\r\n    }\r\n\r\n\r\n\r\n    //}\r\n\r\n\r\n    updateHistory = (event) => {\r\n        event.preventDefault();\r\n        var new_history = this.state.history;\r\n        // Just created a file bound variable to use with the getData() method\r\n        outgoingMessage = event.target[0].value;\r\n        new_history.push({ user: \"customer1\", message: outgoingMessage });\r\n        super.setState({ history: new_history });\r\n        this.setState({ companyName: 0 })\r\n        // Sedning new message as POST request to server\r\n        // postData(outgoingMessage);\r\n        //send(event.target[0].value) ; \r\n        // try {\r\n        //     const response = axios.post('http://localhost:8080/customerMessage', { incomingMessage: 'Hi there' });\r\n        //     console.log('ðŸ‘‰ Returned data:', response);\r\n        // } catch (e) {\r\n        //     console.log(`ðŸ˜± Axios request failed: ${e}`);\r\n        // }\r\n\r\n        //http://localhost:8080/customerMessage\r\n        axios.post('http://10.12.84.5:8080/customerMessage', {\r\n            incomingMessage: outgoingMessage\r\n        })\r\n            .then((response) => {\r\n                console.log(response);\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n        // send a post request \r\n\r\n        // axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\r\n        //     .then((response) => {\r\n        //         console.log(response);\r\n        //     })\r\n    };\r\n\r\n    receiveMessage = async () => {\r\n        axios.get('http://10.12.84.5:8080/adminResponse', { success: \"Received admin message\" })\r\n            .then((response) => {\r\n                //if (incomingMessage != response.adminResponse) {\r\n                console.log(response.data);\r\n                console.log(\"this is the response from server\", response.data.adminResponse);\r\n                var new_history = this.state.history;\r\n                // Just created a file bound variable to use with the getData() method\r\n                incomingMessage = response.data.adminResponse;\r\n                console.log(\"This is the incoming\", incomingMessage)\r\n                console.log(\"This is the previous one\", prevIncomingMessage)\r\n                if (incomingMessage != prevIncomingMessage && incomingMessage != null) {\r\n                    prevIncomingMessage = response.data.adminResponse;\r\n                    console.log(\"in the receiveMessage part\")\r\n                    this.updateAdminMessages();\r\n\r\n                }\r\n                this.render();\r\n            })\r\n        //console.log(response);\r\n        //console.log(\"klsdfjaslkdfjslad\");\r\n        // if (prevIncomingMessage !== incomingMessage) {\r\n        //     prevIncomingMessage = response.adminResponse;\r\n        //     new_history.push({ user: \"admin\", message: incomingMessage });\r\n        //     super.setState({ history: new_history });\r\n        // }\r\n    }\r\n    updateAdminMessages = () => {\r\n        var new_history = this.state.history;\r\n        new_history.push({ user: \"admin\", message: incomingMessage });\r\n        super.setState({ history: new_history });\r\n        console.log(\"Updated admind messages\");\r\n    }\r\n\r\n    render() {\r\n        this.receiveMessage();\r\n        console.log(\"rendering......\")\r\n        return (\r\n\r\n            <div className=\"par\">\r\n\r\n                <div className=\"chatBox pb2\">\r\n                    <p className=\"head1 pb1 pa4 tc\">ALCATEL</p>\r\n                    <div className=\"chatHis\"><ChatHistory history={this.state.history} /></div>\r\n                    <FormInp onSubmit={this.updateHistory} history={this.state.history} />\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n// receiveMessage = () => {\r\n//     axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\r\n//         .then((response) => {\r\n//             //if (incomingMessage != response.adminResponse) {\r\n//             console.log(response.adminResponse);\r\n//             var new_history = this.state.history;\r\n//             // Just created a file bound variable to use with the getData() method\r\n//             incomingMessage = response.adminResponse;\r\n//         })\r\n//     console.log(response);\r\n//     //console.log(\"klsdfjaslkdfjslad\");\r\n//     // if (prevIncomingMessage !== incomingMessage) {\r\n//     //     prevIncomingMessage = response.adminResponse;\r\n//     //     new_history.push({ user: \"admin\", message: incomingMessage });\r\n//     //     super.setState({ history: new_history });\r\n//     // }\r\n// }\r\n// updateAdminMessages = () => {\r\n//     prevIncomingMessage = response.adminResponse;\r\n//     new_history.push({ user: \"admin\", message: incomingMessage });\r\n//     super.setState({ history: new_history });\r\n//     console.log(\"Updated admind messages\");\r\n// }\r\nexport default Chatbox; \r\n\r\n\r\n{/* <div className=\"ba bw2 pa2 bg-light-yellow br4\" >\r\n\r\n<div className=\"chatbox\"><ChatHistory history={this.state.history} /></div>\r\n<FormInp onSubmit={this.updateHistory} history={this.state.history} />\r\n\r\n</div> */}"]},"metadata":{},"sourceType":"module"}