{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Johnson\\\\Desktop\\\\KanScrubs\\\\random\\\\src\\\\chat_ui\\\\Chatbox.js\";\nimport React from \"react\";\nimport ChatHistory from \"./ChatHistory\";\nimport FormInp from \"./FormInp\";\nimport send from \"./rainbow/Send\";\nimport axios from \"axios\";\nvar outgoingMessage;\nvar incomingMessage = '';\nvar prevIncomingMessage = '';\n\nclass Chatbox extends React.Component {\n  constructor() {\n    state = {\n      companyName: \"\",\n      stored_value: \"Your Message will appear hear\",\n      history: this.props.history\n    };\n  }\n\n  render() {\n    this.receiveMessage(); // //console.log(\"rendering......\")\n\n    return React.createElement(\"div\", {\n      className: \"ba bw2 pa2 bg-light-yellow br4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(ChatHistory, {\n      history: this.state.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(FormInp, {\n      onSubmit: this.updateHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n} // receiveMessage = () => {\n//     axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\n//         .then((response) => {\n//             //if (incomingMessage != response.adminResponse) {\n//             console.log(response.adminResponse);\n//             var new_history = this.state.history;\n//             // Just created a file bound variable to use with the getData() method\n//             incomingMessage = response.adminResponse;\n//         })\n//     console.log(response);\n//     //console.log(\"klsdfjaslkdfjslad\");\n//     // if (prevIncomingMessage !== incomingMessage) {\n//     //     prevIncomingMessage = response.adminResponse;\n//     //     new_history.push({ user: \"admin\", message: incomingMessage });\n//     //     super.setState({ history: new_history });\n//     // }\n// }\n// updateAdminMessages = () => {\n//     prevIncomingMessage = response.adminResponse;\n//     new_history.push({ user: \"admin\", message: incomingMessage });\n//     super.setState({ history: new_history });\n//     console.log(\"Updated admind messages\");\n// }\n\n\nexport default Chatbox;","map":{"version":3,"sources":["C:/Users/Jose Johnson/Desktop/KanScrubs/random/src/chat_ui/Chatbox.js"],"names":["React","ChatHistory","FormInp","send","axios","outgoingMessage","incomingMessage","prevIncomingMessage","Chatbox","Component","constructor","state","companyName","stored_value","history","props","render","receiveMessage","updateHistory"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,eAAJ;AACA,IAAIC,eAAe,GAAG,EAAtB;AACA,IAAIC,mBAAmB,GAAG,EAA1B;;AAGA,MAAMC,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,GAAG;AACVC,IAAAA,KAAK,GAAG;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,YAAY,EAAE,+BAFV;AAGJC,MAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD;AAHhB,KAAR;AAKH;;AA+DDE,EAAAA,MAAM,GAAG;AACL,SAAKC,cAAL,GADK,CAEL;;AACA,WAEI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWG,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAE,KAAKI,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFJ;AASH;;AAlFiC,C,CAqFtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeV,OAAf","sourcesContent":["import React from \"react\";\r\nimport ChatHistory from \"./ChatHistory\";\r\nimport FormInp from \"./FormInp\";\r\nimport send from \"./rainbow/Send\";\r\nimport axios from \"axios\";\r\n\r\nvar outgoingMessage;\r\nvar incomingMessage = '';\r\nvar prevIncomingMessage = '';\r\n\r\n\r\nclass Chatbox extends React.Component {\r\n    constructor() {\r\n        state = {\r\n            companyName: \"\",\r\n            stored_value: \"Your Message will appear hear\",\r\n            history: this.props.history,\r\n        }\r\n    }\r\n\r\n    updateHistory = (event) => {\r\n        event.preventDefault();\r\n        var new_history = this.state.history;\r\n        // Just created a file bound variable to use with the getData() method\r\n        outgoingMessage = event.target[0].value;\r\n        new_history.push({ user: \"customer1\", message: outgoingMessage });\r\n        super.setState({ history: new_history });\r\n        // Sedning new message as POST request to server\r\n        // postData(outgoingMessage);\r\n        //send(event.target[0].value) ; \r\n        // try {\r\n        //     const response = axios.post('http://localhost:8080/customerMessage', { incomingMessage: 'Hi there' });\r\n        //     console.log('ðŸ‘‰ Returned data:', response);\r\n        // } catch (e) {\r\n        //     console.log(`ðŸ˜± Axios request failed: ${e}`);\r\n        // }\r\n\r\n        axios.post('http://localhost:8080/customerMessage', {\r\n            incomingMessage: outgoingMessage\r\n        })\r\n            .then((response) => {\r\n                console.log(response);\r\n            }, (error) => {\r\n                console.log(error);\r\n            });\r\n        // send a post request \r\n\r\n        // axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\r\n        //     .then((response) => {\r\n        //         console.log(response);\r\n        //     })\r\n    };\r\n\r\n    receiveMessage = () => {\r\n        axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\r\n            .then((response) => {\r\n                //if (incomingMessage != response.adminResponse) {\r\n                console.log(response.adminResponse);\r\n                var new_history = this.state.history;\r\n                // Just created a file bound variable to use with the getData() method\r\n                incomingMessage = response.adminResponse;\r\n                if (incomingMessage != prevIncomingMessage) {\r\n                    this.updateAdminMessages();\r\n                }\r\n            })\r\n        //console.log(response);\r\n        //console.log(\"klsdfjaslkdfjslad\");\r\n        // if (prevIncomingMessage !== incomingMessage) {\r\n        //     prevIncomingMessage = response.adminResponse;\r\n        //     new_history.push({ user: \"admin\", message: incomingMessage });\r\n        //     super.setState({ history: new_history });\r\n        // }\r\n    }\r\n    updateAdminMessages = () => {\r\n        prevIncomingMessage = response.adminResponse;\r\n        var new_history = this.state.history;\r\n        new_history.push({ user: \"admin\", message: incomingMessage });\r\n        super.setState({ history: new_history });\r\n        console.log(\"Updated admind messages\");\r\n    }\r\n\r\n    render() {\r\n        this.receiveMessage();\r\n        // //console.log(\"rendering......\")\r\n        return (\r\n\r\n            <div className=\"ba bw2 pa2 bg-light-yellow br4\" >\r\n\r\n                <ChatHistory history={this.state.history} />\r\n                <FormInp onSubmit={this.updateHistory} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// receiveMessage = () => {\r\n//     axios.get('http://localhost:8080/adminResponse', { success: \"Received admin message\" })\r\n//         .then((response) => {\r\n//             //if (incomingMessage != response.adminResponse) {\r\n//             console.log(response.adminResponse);\r\n//             var new_history = this.state.history;\r\n//             // Just created a file bound variable to use with the getData() method\r\n//             incomingMessage = response.adminResponse;\r\n//         })\r\n//     console.log(response);\r\n//     //console.log(\"klsdfjaslkdfjslad\");\r\n//     // if (prevIncomingMessage !== incomingMessage) {\r\n//     //     prevIncomingMessage = response.adminResponse;\r\n//     //     new_history.push({ user: \"admin\", message: incomingMessage });\r\n//     //     super.setState({ history: new_history });\r\n//     // }\r\n// }\r\n// updateAdminMessages = () => {\r\n//     prevIncomingMessage = response.adminResponse;\r\n//     new_history.push({ user: \"admin\", message: incomingMessage });\r\n//     super.setState({ history: new_history });\r\n//     console.log(\"Updated admind messages\");\r\n// }\r\nexport default Chatbox; "]},"metadata":{},"sourceType":"module"}