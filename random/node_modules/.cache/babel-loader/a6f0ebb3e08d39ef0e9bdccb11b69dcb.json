{"ast":null,"code":"'use strict';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst {\n  xml,\n  jid,\n  Client\n} = require('@xmpp/client-core');\n\nconst _reconnect = require('@xmpp/reconnect');\n\nconst _websocket = require('@xmpp/websocket');\n\nconst _tcp = require('@xmpp/tcp');\n\nconst _tls = require('@xmpp/tls');\n\nconst _middleware = require('@xmpp/middleware');\n\nconst _streamFeatures = require('@xmpp/stream-features');\n\nconst _iqCaller = require('@xmpp/iq/caller');\n\nconst _iqCallee = require('@xmpp/iq/callee');\n\nconst _resolve = require('@xmpp/resolve'); // Stream features - order matters and define priority\n\n\nconst _starttls = require('@xmpp/starttls/client');\n\nconst _sasl = require('@xmpp/sasl');\n\nconst _resourceBinding = require('@xmpp/resource-binding');\n\nconst _sessionEstablishment = require('@xmpp/session-establishment'); // SASL mechanisms - order matters and define priority\n//const scramsha1 = require('@xmpp/sasl-scram-sha-1');\n\n\nconst plain = require('@xmpp/sasl-plain'); //const anonymous = require('@xmpp/sasl-anonymous');\n\n\nfunction getDomain(service) {\n  const domain = service.split('://')[1] || service;\n  return domain.split(':')[0].split('/')[0];\n}\n\nfunction client(options = {}) {\n  // @ts-ignore\n  const {\n    resource,\n    credentials,\n    username,\n    password\n  } = options,\n        params = __rest(options, [\"resource\", \"credentials\", \"username\", \"password\"]); // @ts-ignore\n\n\n  const {\n    domain,\n    service\n  } = params;\n\n  if (!domain && service) {\n    // @ts-ignore\n    params.domain = getDomain(service);\n  }\n\n  const entity = new Client(params);\n\n  const reconnect = _reconnect({\n    entity\n  });\n\n  const websocket = _websocket({\n    entity\n  });\n\n  const tcp = _tcp({\n    entity\n  });\n\n  const tls = _tls({\n    entity\n  });\n\n  const middleware = _middleware({\n    entity\n  });\n\n  const streamFeatures = _streamFeatures({\n    middleware\n  });\n\n  const iqCaller = _iqCaller({\n    middleware,\n    entity\n  });\n\n  const iqCallee = _iqCallee({\n    middleware,\n    entity\n  });\n\n  const resolve = _resolve({\n    entity\n  }); // Stream features - order matters and define priority\n\n\n  const starttls = _starttls({\n    streamFeatures\n  });\n\n  const sasl = _sasl({\n    streamFeatures\n  }, credentials || {\n    username,\n    password\n  });\n\n  const resourceBinding = _resourceBinding({\n    iqCaller,\n    streamFeatures\n  }, resource);\n\n  const sessionEstablishment = _sessionEstablishment({\n    iqCaller,\n    streamFeatures\n  }); // SASL mechanisms - order matters and define priority\n\n\n  const mechanisms = Object.entries({\n    plain\n  }).map(([k, v]) => ({\n    [k]: v(sasl)\n  }));\n  iqCallee.get('urn:xmpp:ping', 'ping', ctx => {\n    return {};\n  });\n  return Object.assign(entity, {\n    entity,\n    reconnect,\n    tcp,\n    websocket,\n    tls,\n    middleware,\n    streamFeatures,\n    iqCaller,\n    iqCallee,\n    resolve,\n    starttls,\n    sasl,\n    resourceBinding,\n    sessionEstablishment,\n    mechanisms\n  });\n}\n\nmodule.exports.xml = xml;\nmodule.exports.jid = jid;\nmodule.exports.client = client;","map":{"version":3,"sources":["../../../src/lib/common/XmppQueue/XmppClientWrapper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["'use strict';\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst { xml, jid, Client } = require('@xmpp/client-core');\r\nconst _reconnect = require('@xmpp/reconnect');\r\nconst _websocket = require('@xmpp/websocket');\r\nconst _tcp = require('@xmpp/tcp');\r\nconst _tls = require('@xmpp/tls');\r\nconst _middleware = require('@xmpp/middleware');\r\nconst _streamFeatures = require('@xmpp/stream-features');\r\nconst _iqCaller = require('@xmpp/iq/caller');\r\nconst _iqCallee = require('@xmpp/iq/callee');\r\nconst _resolve = require('@xmpp/resolve');\r\n// Stream features - order matters and define priority\r\nconst _starttls = require('@xmpp/starttls/client');\r\nconst _sasl = require('@xmpp/sasl');\r\nconst _resourceBinding = require('@xmpp/resource-binding');\r\nconst _sessionEstablishment = require('@xmpp/session-establishment');\r\n// SASL mechanisms - order matters and define priority\r\n//const scramsha1 = require('@xmpp/sasl-scram-sha-1');\r\nconst plain = require('@xmpp/sasl-plain');\r\n//const anonymous = require('@xmpp/sasl-anonymous');\r\nfunction getDomain(service) {\r\n    const domain = service.split('://')[1] || service;\r\n    return domain.split(':')[0].split('/')[0];\r\n}\r\nfunction client(options = {}) {\r\n    // @ts-ignore\r\n    const { resource, credentials, username, password } = options, params = __rest(options, [\"resource\", \"credentials\", \"username\", \"password\"]);\r\n    // @ts-ignore\r\n    const { domain, service } = params;\r\n    if (!domain && service) {\r\n        // @ts-ignore\r\n        params.domain = getDomain(service);\r\n    }\r\n    const entity = new Client(params);\r\n    const reconnect = _reconnect({ entity });\r\n    const websocket = _websocket({ entity });\r\n    const tcp = _tcp({ entity });\r\n    const tls = _tls({ entity });\r\n    const middleware = _middleware({ entity });\r\n    const streamFeatures = _streamFeatures({ middleware });\r\n    const iqCaller = _iqCaller({ middleware, entity });\r\n    const iqCallee = _iqCallee({ middleware, entity });\r\n    const resolve = _resolve({ entity });\r\n    // Stream features - order matters and define priority\r\n    const starttls = _starttls({ streamFeatures });\r\n    const sasl = _sasl({ streamFeatures }, credentials || { username, password });\r\n    const resourceBinding = _resourceBinding({ iqCaller, streamFeatures }, resource);\r\n    const sessionEstablishment = _sessionEstablishment({ iqCaller, streamFeatures });\r\n    // SASL mechanisms - order matters and define priority\r\n    const mechanisms = Object.entries({ plain }).map(([k, v]) => ({ [k]: v(sasl) }));\r\n    iqCallee.get('urn:xmpp:ping', 'ping', ctx => { return {}; });\r\n    return Object.assign(entity, {\r\n        entity,\r\n        reconnect,\r\n        tcp,\r\n        websocket,\r\n        tls,\r\n        middleware,\r\n        streamFeatures,\r\n        iqCaller,\r\n        iqCallee,\r\n        resolve,\r\n        starttls,\r\n        sasl,\r\n        resourceBinding,\r\n        sessionEstablishment,\r\n        mechanisms,\r\n    });\r\n}\r\nmodule.exports.xml = xml;\r\nmodule.exports.jid = jid;\r\nmodule.exports.client = client;\r\n//# sourceMappingURL=XmppClientWrapper.js.map"]},"metadata":{},"sourceType":"script"}