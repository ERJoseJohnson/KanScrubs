{"ast":null,"code":"module.exports = function (obj, method, handler, context) {\n  var original = obj[method]; // Unpatch first if already patched.\n\n  if (original.unpatch) {\n    original = original.unpatch();\n  } // Patch the function.\n\n\n  obj[method] = function () {\n    var ctx = context || this;\n    var args = [].slice.call(arguments);\n    args.unshift(original.bind(ctx));\n    return handler.apply(ctx, args);\n  }; // Provide \"unpatch\" function.\n\n\n  obj[method].unpatch = function () {\n    obj[method] = original;\n    return original;\n  }; // Return the original.\n\n\n  return original;\n};","map":{"version":3,"sources":["C:/Users/Jose Johnson/Desktop/KanScrubs/random/node_modules/monkeypatch/index.js"],"names":["module","exports","obj","method","handler","context","original","unpatch","ctx","args","slice","call","arguments","unshift","bind","apply"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAcC,MAAd,EAAsBC,OAAtB,EAA+BC,OAA/B,EAAwC;AACvD,MAAIC,QAAQ,GAAGJ,GAAG,CAACC,MAAD,CAAlB,CADuD,CAGvD;;AACA,MAAIG,QAAQ,CAACC,OAAb,EAAsB;AACpBD,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,OAAT,EAAX;AACD,GANsD,CAQvD;;;AACAL,EAAAA,GAAG,CAACC,MAAD,CAAH,GAAc,YAAW;AACvB,QAAIK,GAAG,GAAIH,OAAO,IAAI,IAAtB;AACA,QAAII,IAAI,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcC,SAAd,CAAX;AACAH,IAAAA,IAAI,CAACI,OAAL,CAAaP,QAAQ,CAACQ,IAAT,CAAcN,GAAd,CAAb;AACA,WAAOJ,OAAO,CAACW,KAAR,CAAcP,GAAd,EAAmBC,IAAnB,CAAP;AACD,GALD,CATuD,CAgBvD;;;AACAP,EAAAA,GAAG,CAACC,MAAD,CAAH,CAAYI,OAAZ,GAAsB,YAAW;AAC/BL,IAAAA,GAAG,CAACC,MAAD,CAAH,GAAcG,QAAd;AACA,WAAOA,QAAP;AACD,GAHD,CAjBuD,CAsBvD;;;AACA,SAAOA,QAAP;AACD,CAxBD","sourcesContent":["module.exports = function(obj, method, handler, context) {\r\n  var original = obj[method];\r\n\r\n  // Unpatch first if already patched.\r\n  if (original.unpatch) {\r\n    original = original.unpatch();\r\n  }\r\n\r\n  // Patch the function.\r\n  obj[method] = function() {\r\n    var ctx  = context || this;\r\n    var args = [].slice.call(arguments);\r\n    args.unshift(original.bind(ctx));\r\n    return handler.apply(ctx, args);\r\n  };\r\n\r\n  // Provide \"unpatch\" function.\r\n  obj[method].unpatch = function() {\r\n    obj[method] = original;\r\n    return original;\r\n  };\r\n\r\n  // Return the original.\r\n  return original;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}