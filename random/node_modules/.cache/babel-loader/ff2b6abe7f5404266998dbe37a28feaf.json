{"ast":null,"code":"'use strict';\n\nvar Parser = require('./Parser');\n\nmodule.exports = function parse(data, options) {\n  var p;\n\n  if (typeof options === 'function') {\n    p = new options(); // eslint-disable-line\n  } else {\n    p = new Parser(options);\n  }\n\n  var result = null;\n  var error = null;\n  p.on('tree', function (tree) {\n    result = tree;\n  });\n  p.on('error', function (e) {\n    error = e;\n  });\n  p.write(data);\n  p.end();\n\n  if (error) {\n    throw error;\n  } else {\n    return result;\n  }\n};","map":{"version":3,"sources":["C:/Users/HP/Desktop/KanScrubs/random/node_modules/ltx/lib/parse.js"],"names":["Parser","require","module","exports","parse","data","options","p","result","error","on","tree","e","write","end"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAgBC,IAAhB,EAAsBC,OAAtB,EAA+B;AAC9C,MAAIC,CAAJ;;AACA,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,CAAC,GAAG,IAAID,OAAJ,EAAJ,CADiC,CACf;AACnB,GAFD,MAEO;AACLC,IAAAA,CAAC,GAAG,IAAIP,MAAJ,CAAWM,OAAX,CAAJ;AACD;;AAED,MAAIE,MAAM,GAAG,IAAb;AACA,MAAIC,KAAK,GAAG,IAAZ;AAEAF,EAAAA,CAAC,CAACG,EAAF,CAAK,MAAL,EAAa,UAAUC,IAAV,EAAgB;AAC3BH,IAAAA,MAAM,GAAGG,IAAT;AACD,GAFD;AAGAJ,EAAAA,CAAC,CAACG,EAAF,CAAK,OAAL,EAAc,UAAUE,CAAV,EAAa;AACzBH,IAAAA,KAAK,GAAGG,CAAR;AACD,GAFD;AAIAL,EAAAA,CAAC,CAACM,KAAF,CAAQR,IAAR;AACAE,EAAAA,CAAC,CAACO,GAAF;;AAEA,MAAIL,KAAJ,EAAW;AACT,UAAMA,KAAN;AACD,GAFD,MAEO;AACL,WAAOD,MAAP;AACD;AACF,CA1BD","sourcesContent":["'use strict'\n\nvar Parser = require('./Parser')\n\nmodule.exports = function parse (data, options) {\n  var p\n  if (typeof options === 'function') {\n    p = new options() // eslint-disable-line\n  } else {\n    p = new Parser(options)\n  }\n\n  var result = null\n  var error = null\n\n  p.on('tree', function (tree) {\n    result = tree\n  })\n  p.on('error', function (e) {\n    error = e\n  })\n\n  p.write(data)\n  p.end()\n\n  if (error) {\n    throw error\n  } else {\n    return result\n  }\n}\n"]},"metadata":{},"sourceType":"script"}